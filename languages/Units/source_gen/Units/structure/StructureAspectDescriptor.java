package Units.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCentimetre = createDescriptorForCentimetre();
  /*package*/ final ConceptDescriptor myConceptDistance = createDescriptorForDistance();
  /*package*/ final ConceptDescriptor myConceptDistance_Expression = createDescriptorForDistance_Expression();
  /*package*/ final ConceptDescriptor myConceptGridpoints_Dist = createDescriptorForGridpoints_Dist();
  /*package*/ final ConceptDescriptor myConceptMicrometre = createDescriptorForMicrometre();
  /*package*/ final ConceptDescriptor myConceptMillimetre = createDescriptorForMillimetre();
  /*package*/ final ConceptDescriptor myConceptNanometre = createDescriptorForNanometre();
  /*package*/ final ConceptDescriptor myConceptUnit = createDescriptorForUnit();
  /*package*/ final ConceptDescriptor myConceptUnit_Area = createDescriptorForUnit_Area();
  /*package*/ final ConceptDescriptor myConceptUnit_Concentration = createDescriptorForUnit_Concentration();
  /*package*/ final ConceptDescriptor myConceptUnit_Distance = createDescriptorForUnit_Distance();
  /*package*/ final ConceptDescriptor myConceptUnit_Volume = createDescriptorForUnit_Volume();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCentimetre, myConceptDistance, myConceptDistance_Expression, myConceptGridpoints_Dist, myConceptMicrometre, myConceptMillimetre, myConceptNanometre, myConceptUnit, myConceptUnit_Area, myConceptUnit_Concentration, myConceptUnit_Distance, myConceptUnit_Volume);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Centimetre:
        return myConceptCentimetre;
      case LanguageConceptSwitch.Distance:
        return myConceptDistance;
      case LanguageConceptSwitch.Distance_Expression:
        return myConceptDistance_Expression;
      case LanguageConceptSwitch.Gridpoints_Dist:
        return myConceptGridpoints_Dist;
      case LanguageConceptSwitch.Micrometre:
        return myConceptMicrometre;
      case LanguageConceptSwitch.Millimetre:
        return myConceptMillimetre;
      case LanguageConceptSwitch.Nanometre:
        return myConceptNanometre;
      case LanguageConceptSwitch.Unit:
        return myConceptUnit;
      case LanguageConceptSwitch.Unit_Area:
        return myConceptUnit_Area;
      case LanguageConceptSwitch.Unit_Concentration:
        return myConceptUnit_Concentration;
      case LanguageConceptSwitch.Unit_Distance:
        return myConceptUnit_Distance;
      case LanguageConceptSwitch.Unit_Volume:
        return myConceptUnit_Volume;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCentimetre() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Centimetre", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a37c04cL);
    b.class_(false, false, false);
    b.super_("Units.structure.Unit_Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989769261132");
    b.version(2);
    b.alias("cm");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDistance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c7667L);
    b.class_(false, false, false);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768521319");
    b.version(2);
    b.aggregate("value", 0x2f6b1b828a2c7668L).target(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a3784b4L).optional(false).ordered(true).multiple(false).origin("3416854989768521320").done();
    b.aggregate("units", 0x2f6b1b828a2c7ab9L).target(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L).optional(false).ordered(true).multiple(false).origin("3416854989768522425").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDistance_Expression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Distance_Expression", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a3784b4L);
    b.class_(false, false, false);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989769245876");
    b.version(2);
    b.aggregate("expr", 0x2f6b1b828a3784b5L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("3416854989769245877").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGridpoints_Dist() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Gridpoints_Dist", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a37abc5L);
    b.class_(false, false, false);
    b.super_("Units.structure.Unit_Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989769255877");
    b.version(2);
    b.alias("gridpoints");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMicrometre() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Micrometre", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c6d71L);
    b.class_(false, false, false);
    b.super_("Units.structure.Unit_Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768519025");
    b.version(2);
    b.alias("um");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMillimetre() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Millimetre", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c6d70L);
    b.class_(false, false, false);
    b.super_("Units.structure.Unit_Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768519024");
    b.version(2);
    b.alias("mm");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNanometre() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Nanometre", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c6d72L);
    b.class_(false, false, false);
    b.super_("Units.structure.Unit_Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768519026");
    b.version(2);
    b.alias("nm");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Unit", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65afL);
    b.class_(false, true, false);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768517039");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnit_Area() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Unit_Area", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c68dfL);
    b.class_(false, true, false);
    b.super_("Units.structure.Unit", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65afL);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768517855");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnit_Concentration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Unit_Concentration", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b1L);
    b.class_(false, false, false);
    b.super_("Units.structure.Unit", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65afL);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768517041");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnit_Distance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Unit_Distance", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65b0L);
    b.class_(false, true, false);
    b.super_("Units.structure.Unit", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c65afL);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768517040");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnit_Volume() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Units", "Unit_Volume", 0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c68deL);
    b.class_(false, false, false);
    b.origin("r:9dfc7f60-2dfb-474a-b564-7f6f97c60f46(Units.structure)/3416854989768517854");
    b.version(2);
    return b.create();
  }
}
