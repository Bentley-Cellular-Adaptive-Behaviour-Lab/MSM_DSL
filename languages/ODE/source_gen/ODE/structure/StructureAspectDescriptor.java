package ODE.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptConstant = createDescriptorForConstant();
  /*package*/ final ConceptDescriptor myConceptConstant_Reference = createDescriptorForConstant_Reference();
  /*package*/ final ConceptDescriptor myConceptODE = createDescriptorForODE();
  /*package*/ final ConceptDescriptor myConceptODE_Container = createDescriptorForODE_Container();
  /*package*/ final ConceptDescriptor myConceptSink_Term = createDescriptorForSink_Term();
  /*package*/ final ConceptDescriptor myConceptSource_Term = createDescriptorForSource_Term();
  /*package*/ final ConceptDescriptor myConceptSpecies = createDescriptorForSpecies();
  /*package*/ final ConceptDescriptor myConceptSpecies_Reference = createDescriptorForSpecies_Reference();
  /*package*/ final ConceptDescriptor myConceptTerm = createDescriptorForTerm();
  /*package*/ final ConceptDescriptor myConceptTerm_Component = createDescriptorForTerm_Component();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptConstant, myConceptConstant_Reference, myConceptODE, myConceptODE_Container, myConceptSink_Term, myConceptSource_Term, myConceptSpecies, myConceptSpecies_Reference, myConceptTerm, myConceptTerm_Component);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Constant:
        return myConceptConstant;
      case LanguageConceptSwitch.Constant_Reference:
        return myConceptConstant_Reference;
      case LanguageConceptSwitch.ODE:
        return myConceptODE;
      case LanguageConceptSwitch.ODE_Container:
        return myConceptODE_Container;
      case LanguageConceptSwitch.Sink_Term:
        return myConceptSink_Term;
      case LanguageConceptSwitch.Source_Term:
        return myConceptSource_Term;
      case LanguageConceptSwitch.Species:
        return myConceptSpecies;
      case LanguageConceptSwitch.Species_Reference:
        return myConceptSpecies_Reference;
      case LanguageConceptSwitch.Term:
        return myConceptTerm;
      case LanguageConceptSwitch.Term_Component:
        return myConceptTerm_Component;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Constant", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f23L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140721443");
    b.version(2);
    b.aggregate("expr", 0x64223a10df460d57L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("7215393397140753751").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstant_Reference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Constant_Reference", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df460f96L);
    b.class_(false, false, false);
    b.super_("ODE.structure.Term_Component", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c6L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140754326");
    b.version(2);
    b.associate("constant_ref", 0x64223a10df460f99L).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f23L).optional(false).origin("7215393397140754329").done();
    b.alias("Constant");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForODE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "ODE", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f22L);
    b.class_(false, false, false);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140721442");
    b.version(2);
    b.aggregate("Target_Species", 0x64223a10df45eb11L).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f21L).optional(false).ordered(true).multiple(false).origin("7215393397140744977").done();
    b.aggregate("Terms", 0x64223a10df45ce96L).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c7L).optional(true).ordered(true).multiple(true).origin("7215393397140737686").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForODE_Container() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "ODE_Container", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f1eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140721438");
    b.version(2);
    b.aggregate("Species", 0x64223a10df4593baL).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f21L).optional(true).ordered(true).multiple(true).origin("7215393397140722618").done();
    b.aggregate("Constants", 0x64223a10df4593bcL).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f23L).optional(true).ordered(true).multiple(true).origin("7215393397140722620").done();
    b.aggregate("ODEs", 0x64223a10df4593c1L).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f22L).optional(true).ordered(true).multiple(true).origin("7215393397140722625").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSink_Term() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Sink_Term", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c8L);
    b.class_(false, false, false);
    b.super_("ODE.structure.Term", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c7L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140722632");
    b.version(2);
    b.alias("Sink Term");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSource_Term() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Source_Term", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c9L);
    b.class_(false, false, false);
    b.super_("ODE.structure.Term", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c7L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140722633");
    b.version(2);
    b.alias("Source Term");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecies() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Species", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f21L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140721441");
    b.version(2);
    b.associate("protein_ref", 0x64223a10df460f94L).target(0xea515ac2fe2e495aL, 0xa1e2243a14826d03L, 0x2c4f113dac89d32dL).optional(false).origin("7215393397140754324").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecies_Reference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Species_Reference", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df460f91L);
    b.class_(false, false, false);
    b.super_("ODE.structure.Term_Component", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c6L);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140754321");
    b.version(2);
    b.associate("species_ref", 0x64223a10df460f92L).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df458f21L).optional(false).origin("7215393397140754322").done();
    b.alias("Species");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTerm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Term", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c7L);
    b.class_(false, true, false);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140722631");
    b.version(2);
    b.aggregate("Components", 0x64223a10df45ce98L).target(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c6L).optional(true).ordered(true).multiple(true).origin("7215393397140737688").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTerm_Component() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ODE", "Term_Component", 0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L, 0x64223a10df4593c6L);
    b.class_(false, false, false);
    b.origin("r:4a56b5da-0545-4128-a124-3bd54f701b5a(ODE.structure)/7215393397140722630");
    b.version(2);
    return b.create();
  }
}
