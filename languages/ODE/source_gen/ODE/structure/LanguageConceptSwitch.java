package ODE.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Constant = 0;
  public static final int Constant_Reference = 1;
  public static final int ODE = 2;
  public static final int ODE_Container = 3;
  public static final int Sink_Term = 4;
  public static final int Source_Term = 5;
  public static final int Species = 6;
  public static final int Species_Reference = 7;
  public static final int Term = 8;
  public static final int Term_Component = 9;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x7b512b3ee40d4b8aL, 0x826be51031d2e9a0L);
    builder.put(0x64223a10df458f23L, Constant);
    builder.put(0x64223a10df460f96L, Constant_Reference);
    builder.put(0x64223a10df458f22L, ODE);
    builder.put(0x64223a10df458f1eL, ODE_Container);
    builder.put(0x64223a10df4593c8L, Sink_Term);
    builder.put(0x64223a10df4593c9L, Source_Term);
    builder.put(0x64223a10df458f21L, Species);
    builder.put(0x64223a10df460f91L, Species_Reference);
    builder.put(0x64223a10df4593c7L, Term);
    builder.put(0x64223a10df4593c6L, Term_Component);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
