package UnitLang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAmount__BehaviorDescriptor = new Amount__BehaviorDescriptor();
  private final BHDescriptor myMass_Concentration__BehaviorDescriptor = new Mass_Concentration__BehaviorDescriptor();
  private final BHDescriptor myAmount_Concentration__BehaviorDescriptor = new Amount_Concentration__BehaviorDescriptor();
  private final BHDescriptor myMass__BehaviorDescriptor = new Mass__BehaviorDescriptor();
  private final BHDescriptor myArea__BehaviorDescriptor = new Area__BehaviorDescriptor();
  private final BHDescriptor myVolume__BehaviorDescriptor = new Volume__BehaviorDescriptor();
  private final BHDescriptor myDistance__BehaviorDescriptor = new Distance__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAmount__BehaviorDescriptor;
      case 1:
        return myAmount_Concentration__BehaviorDescriptor;
      case 2:
        return myArea__BehaviorDescriptor;
      case 3:
        return myDistance__BehaviorDescriptor;
      case 4:
        return myMass__BehaviorDescriptor;
      case 5:
        return myMass_Concentration__BehaviorDescriptor;
      case 6:
        return myVolume__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5abL), MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5b8L), MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5c7L), MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c7667L), MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5c5L), MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5b7L), MetaIdFactory.conceptId(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5cbL)).seal();
}
