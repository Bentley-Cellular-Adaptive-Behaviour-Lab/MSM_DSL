package UnitLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Amount = 0;
  public static final int Amount_Concentration = 1;
  public static final int Amount_Expression = 2;
  public static final int ArbitraryUnitAmount = 3;
  public static final int ArbitraryUnitMass = 4;
  public static final int Area = 5;
  public static final int Area_Expression = 6;
  public static final int Concentration = 7;
  public static final int Concentration_Expression = 8;
  public static final int Distance = 9;
  public static final int Distance_Expression = 10;
  public static final int Litre = 11;
  public static final int Mass = 12;
  public static final int Mass_Concentration = 13;
  public static final int Mass_Expression = 14;
  public static final int Metres_Cubed = 15;
  public static final int Microgram = 16;
  public static final int Microlitre = 17;
  public static final int Micrometre = 18;
  public static final int Micrometres_Cubed = 19;
  public static final int Micrometres_Squared = 20;
  public static final int Micromolar = 21;
  public static final int Micromoles = 22;
  public static final int Milligram = 23;
  public static final int Millilitre = 24;
  public static final int Millimetre = 25;
  public static final int Millimetres_Cubed = 26;
  public static final int Millimetres_Squared = 27;
  public static final int Millimolar = 28;
  public static final int Millimoles = 29;
  public static final int Molar = 30;
  public static final int Moles = 31;
  public static final int Nanogram = 32;
  public static final int Nanolitre = 33;
  public static final int Nanometre = 34;
  public static final int Nanometres_Cubed = 35;
  public static final int Nanometres_Squared = 36;
  public static final int Nanomolar = 37;
  public static final int Nanomoles = 38;
  public static final int Unit = 39;
  public static final int Unit_Amount = 40;
  public static final int Unit_Amount_Combined_Concentration = 41;
  public static final int Unit_Amount_Concentration = 42;
  public static final int Unit_Amount_Molar_Concentration = 43;
  public static final int Unit_Area = 44;
  public static final int Unit_Concentration = 45;
  public static final int Unit_Distance = 46;
  public static final int Unit_Mass = 47;
  public static final int Unit_Mass_Concentration = 48;
  public static final int Unit_Volume = 49;
  public static final int Unit_Volume_Litre = 50;
  public static final int Unit_Volume_Metre = 51;
  public static final int Volume = 52;
  public static final int Volume_Expression = 53;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL);
    builder.put(0xb839ee2c0e6f5abL, Amount);
    builder.put(0xb839ee2c0e6f5b8L, Amount_Concentration);
    builder.put(0x622035beb7ca54f8L, Amount_Expression);
    builder.put(0x26464ad7b310b826L, ArbitraryUnitAmount);
    builder.put(0x26464ad7b310b9f9L, ArbitraryUnitMass);
    builder.put(0xb839ee2c0e6f5c7L, Area);
    builder.put(0xb839ee2c0e6f5c8L, Area_Expression);
    builder.put(0xb839ee2c0e6f5b9L, Concentration);
    builder.put(0xb839ee2c0e6f5a2L, Concentration_Expression);
    builder.put(0x2f6b1b828a2c7667L, Distance);
    builder.put(0x2f6b1b828a3784b4L, Distance_Expression);
    builder.put(0xb839ee2c0e6f5adL, Litre);
    builder.put(0xb839ee2c0e6f5c5L, Mass);
    builder.put(0xb839ee2c0e6f5b7L, Mass_Concentration);
    builder.put(0xb839ee2c0e6f5c3L, Mass_Expression);
    builder.put(0x7a945de349fcbc4fL, Metres_Cubed);
    builder.put(0xb839ee2c0e6f5b6L, Microgram);
    builder.put(0xb839ee2c0e6f5afL, Microlitre);
    builder.put(0x2f6b1b828a2c6d71L, Micrometre);
    builder.put(0xb839ee2c0e6f5c0L, Micrometres_Cubed);
    builder.put(0xb839ee2c0e6f5bcL, Micrometres_Squared);
    builder.put(0xb839ee2c0e6f5a4L, Micromolar);
    builder.put(0x622035beb7ca54f0L, Micromoles);
    builder.put(0xb839ee2c0e6f5b4L, Milligram);
    builder.put(0xb839ee2c0e6f5aeL, Millilitre);
    builder.put(0x2f6b1b828a2c6d70L, Millimetre);
    builder.put(0xb839ee2c0e6f5bfL, Millimetres_Cubed);
    builder.put(0xb839ee2c0e6f5bbL, Millimetres_Squared);
    builder.put(0xb839ee2c0e6f5a5L, Millimolar);
    builder.put(0xb839ee2c0e6f5a9L, Millimoles);
    builder.put(0xb839ee2c0e6f5a3L, Molar);
    builder.put(0xb839ee2c0e6f5a8L, Moles);
    builder.put(0x7a945de349fb5634L, Nanogram);
    builder.put(0xb839ee2c0e6f5b0L, Nanolitre);
    builder.put(0x2f6b1b828a2c6d72L, Nanometre);
    builder.put(0xb839ee2c0e6f5c1L, Nanometres_Cubed);
    builder.put(0xb839ee2c0e6f5bdL, Nanometres_Squared);
    builder.put(0xb839ee2c0e6f5a6L, Nanomolar);
    builder.put(0x622035beb7ca54f1L, Nanomoles);
    builder.put(0x2f6b1b828a2c65afL, Unit);
    builder.put(0xb839ee2c0e6f5a7L, Unit_Amount);
    builder.put(0x64223a10df50ecf1L, Unit_Amount_Combined_Concentration);
    builder.put(0x622035beb7ca5506L, Unit_Amount_Concentration);
    builder.put(0x64223a10df51b1ecL, Unit_Amount_Molar_Concentration);
    builder.put(0x2f6b1b828a2c68dfL, Unit_Area);
    builder.put(0x2f6b1b828a2c65b1L, Unit_Concentration);
    builder.put(0x2f6b1b828a2c65b0L, Unit_Distance);
    builder.put(0xb839ee2c0e6f5a0L, Unit_Mass);
    builder.put(0x622035beb7ca5505L, Unit_Mass_Concentration);
    builder.put(0x2f6b1b828a2c68deL, Unit_Volume);
    builder.put(0xb839ee2c0e6f5c9L, Unit_Volume_Litre);
    builder.put(0xb839ee2c0e6f5caL, Unit_Volume_Metre);
    builder.put(0xb839ee2c0e6f5cbL, Volume);
    builder.put(0xb839ee2c0e6f5ccL, Volume_Expression);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
