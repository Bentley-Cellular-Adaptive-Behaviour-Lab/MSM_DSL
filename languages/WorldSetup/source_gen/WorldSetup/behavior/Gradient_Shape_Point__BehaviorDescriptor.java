package WorldSetup.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import org.iets3.core.expr.base.behavior.IETS3ExprEvalHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public final class Gradient_Shape_Point__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x28d0502d0d028bcaL, "WorldSetup.structure.Gradient_Shape_Point");

  public static final SMethod<Float> get_centre_X_float_id3wWy5vw6mLf = new SMethodBuilder<Float>(new SJavaCompoundTypeImpl(Float.class)).name("get_centre_X_float").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6mLf").build();
  public static final SMethod<String> get_centre_X_string_id3wWy5vw6wW0 = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_centre_X_string").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6wW0").build();
  public static final SMethod<Float> get_centre_Y_float_id3wWy5vw6oOc = new SMethodBuilder<Float>(new SJavaCompoundTypeImpl(Float.class)).name("get_centre_Y_float").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6oOc").build();
  public static final SMethod<String> get_centre_Y_string_id3wWy5vw6y03 = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_centre_Y_string").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6y03").build();
  public static final SMethod<Float> get_centre_Z_float_id3wWy5vw6pvK = new SMethodBuilder<Float>(new SJavaCompoundTypeImpl(Float.class)).name("get_centre_Z_float").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6pvK").build();
  public static final SMethod<String> get_centre_Z_string_id3wWy5vw6yQo = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_centre_Z_string").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6yQo").build();
  public static final SMethod<Float> get_radius_float_id3wWy5vw6pHU = new SMethodBuilder<Float>(new SJavaCompoundTypeImpl(Float.class)).name("get_radius_float").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6pHU").build();
  public static final SMethod<String> get_radius_string_id3wWy5vw6$0J = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_radius_string").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3wWy5vw6$0J").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(get_centre_X_float_id3wWy5vw6mLf, get_centre_X_string_id3wWy5vw6wW0, get_centre_Y_float_id3wWy5vw6oOc, get_centre_Y_string_id3wWy5vw6y03, get_centre_Z_float_id3wWy5vw6pvK, get_centre_Z_string_id3wWy5vw6yQo, get_radius_float_id3wWy5vw6pHU, get_radius_string_id3wWy5vw6$0J);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static Float get_centre_X_float_id3wWy5vw6mLf(@NotNull SNode __thisNode__) {
    return ((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Centre$rS1i), LINKS.X_Coord$jBPh), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static String get_centre_X_string_id3wWy5vw6wW0(@NotNull SNode __thisNode__) {
    return String.valueOf((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Centre$rS1i), LINKS.X_Coord$jBPh), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static Float get_centre_Y_float_id3wWy5vw6oOc(@NotNull SNode __thisNode__) {
    return ((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Centre$rS1i), LINKS.Y_Coord$jHeC), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static String get_centre_Y_string_id3wWy5vw6y03(@NotNull SNode __thisNode__) {
    return String.valueOf((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Centre$rS1i), LINKS.Y_Coord$jHeC), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static Float get_centre_Z_float_id3wWy5vw6pvK(@NotNull SNode __thisNode__) {
    return ((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Centre$rS1i), LINKS.Z_Coord$jHVF), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static String get_centre_Z_string_id3wWy5vw6yQo(@NotNull SNode __thisNode__) {
    return String.valueOf((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Centre$rS1i), LINKS.Z_Coord$jHVF), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static Float get_radius_float_id3wWy5vw6pHU(@NotNull SNode __thisNode__) {
    return ((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Radius$nFle), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }
  /*package*/ static String get_radius_string_id3wWy5vw6$0J(@NotNull SNode __thisNode__) {
    return String.valueOf((Float) IETS3ExprEvalHelper.evaluate(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.Radius$nFle), LINKS.value$SBs3), LINKS.expr$fJhI)));
  }

  /*package*/ Gradient_Shape_Point__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Float) get_centre_X_float_id3wWy5vw6mLf(node));
      case 1:
        return (T) ((String) get_centre_X_string_id3wWy5vw6wW0(node));
      case 2:
        return (T) ((Float) get_centre_Y_float_id3wWy5vw6oOc(node));
      case 3:
        return (T) ((String) get_centre_Y_string_id3wWy5vw6y03(node));
      case 4:
        return (T) ((Float) get_centre_Z_float_id3wWy5vw6pvK(node));
      case 5:
        return (T) ((String) get_centre_Z_string_id3wWy5vw6yQo(node));
      case 6:
        return (T) ((Float) get_radius_float_id3wWy5vw6pHU(node));
      case 7:
        return (T) ((String) get_radius_string_id3wWy5vw6$0J(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink Centre$rS1i = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x28d0502d0d028bcaL, 0x2e0657be386ef40bL, "Centre");
    /*package*/ static final SContainmentLink X_Coord$jBPh = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, 0x47c452e0e9687f75L, "X_Coord");
    /*package*/ static final SContainmentLink value$SBs3 = MetaAdapterFactory.getContainmentLink(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a2c7667L, 0x2f6b1b828a2c7668L, "value");
    /*package*/ static final SContainmentLink expr$fJhI = MetaAdapterFactory.getContainmentLink(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0x2f6b1b828a3784b4L, 0x2f6b1b828a3784b5L, "expr");
    /*package*/ static final SContainmentLink Y_Coord$jHeC = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, 0x47c452e0e9687f77L, "Y_Coord");
    /*package*/ static final SContainmentLink Z_Coord$jHVF = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, 0x47c452e0e9687f7aL, "Z_Coord");
    /*package*/ static final SContainmentLink Radius$nFle = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x28d0502d0d028bcaL, 0x2f6b1b828a386014L, "Radius");
  }
}
