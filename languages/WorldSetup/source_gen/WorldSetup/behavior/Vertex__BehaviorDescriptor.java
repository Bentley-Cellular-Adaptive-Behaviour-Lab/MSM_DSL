package WorldSetup.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.math.BigDecimal;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import Units.behavior.Distance__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SProperty;

public final class Vertex__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x51ca2b62e9a67f63L, "WorldSetup.structure.Vertex");

  public static final SMethod<String> get_vertex_xcoord_string_id1r0uutBHkNS = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_vertex_xcoord_string").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1r0uutBHkNS").build();
  public static final SMethod<BigDecimal> get_vertex_xcoord_decimal_id1r0uutBHkO6 = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_vertex_xcoord_decimal").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1r0uutBHkO6").build();
  public static final SMethod<Integer> get_vertex_xcoord_gridpoint_id3V40ltr1arY = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_vertex_xcoord_gridpoint").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3V40ltr1arY").build();
  public static final SMethod<String> get_vertex_ycoord_string_id1r0uutBHmwl = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_vertex_ycoord_string").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1r0uutBHmwl").build();
  public static final SMethod<BigDecimal> get_vertex_ycoord_decimal_id1r0uutBHmwz = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_vertex_ycoord_decimal").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1r0uutBHmwz").build();
  public static final SMethod<Integer> get_vertex_ycoord_gridpoint_id3V40ltr1cTa = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_vertex_ycoord_gridpoint").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3V40ltr1cTa").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(get_vertex_xcoord_string_id1r0uutBHkNS, get_vertex_xcoord_decimal_id1r0uutBHkO6, get_vertex_xcoord_gridpoint_id3V40ltr1arY, get_vertex_ycoord_string_id1r0uutBHmwl, get_vertex_ycoord_decimal_id1r0uutBHmwz, get_vertex_ycoord_gridpoint_id3V40ltr1cTa);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static String get_vertex_xcoord_string_id1r0uutBHkNS(@NotNull SNode __thisNode__) {
    return Vertex__BehaviorDescriptor.get_vertex_xcoord_decimal_id1r0uutBHkO6.invoke(__thisNode__).toString();
  }
  /*package*/ static BigDecimal get_vertex_xcoord_decimal_id1r0uutBHkO6(@NotNull SNode __thisNode__) {
    return (BigDecimal) Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.X_Coord$$NNM));
  }
  /*package*/ static int get_vertex_xcoord_gridpoint_id3V40ltr1arY(@NotNull SNode __thisNode__) {
    SNode grid = SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.World_Container$fW, false, false), LINKS.grid$mgtJ);
    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }
    return (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.X_Coord$$NNM), ((float) scale));
  }
  /*package*/ static String get_vertex_ycoord_string_id1r0uutBHmwl(@NotNull SNode __thisNode__) {
    return Vertex__BehaviorDescriptor.get_vertex_ycoord_decimal_id1r0uutBHmwz.invoke(__thisNode__).toString();
  }
  /*package*/ static BigDecimal get_vertex_ycoord_decimal_id1r0uutBHmwz(@NotNull SNode __thisNode__) {
    return (BigDecimal) Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Y_Coord$$OhO));
  }
  /*package*/ static int get_vertex_ycoord_gridpoint_id3V40ltr1cTa(@NotNull SNode __thisNode__) {
    SNode grid = SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.World_Container$fW, false, false), LINKS.grid$mgtJ);
    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }
    return (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.X_Coord$$NNM), ((float) scale));
  }

  /*package*/ Vertex__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((String) get_vertex_xcoord_string_id1r0uutBHkNS(node));
      case 1:
        return (T) ((BigDecimal) get_vertex_xcoord_decimal_id1r0uutBHkO6(node));
      case 2:
        return (T) ((Integer) get_vertex_xcoord_gridpoint_id3V40ltr1arY(node));
      case 3:
        return (T) ((String) get_vertex_ycoord_string_id1r0uutBHmwl(node));
      case 4:
        return (T) ((BigDecimal) get_vertex_ycoord_decimal_id1r0uutBHmwz(node));
      case 5:
        return (T) ((Integer) get_vertex_ycoord_gridpoint_id3V40ltr1cTa(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink X_Coord$$NNM = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x51ca2b62e9a67f63L, 0x383c8857e003efc5L, "X_Coord");
    /*package*/ static final SContainmentLink grid$mgtJ = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e3L, 0x73ca99e5119b19e4L, "grid");
    /*package*/ static final SContainmentLink Y_Coord$$OhO = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x51ca2b62e9a67f63L, 0x383c8857e003efc7L, "Y_Coord");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept World_Container$fW = MetaAdapterFactory.getConcept(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e3L, "WorldSetup.structure.World_Container");
  }

  private static final class PROPS {
    /*package*/ static final SProperty Scaling$mTyg = MetaAdapterFactory.getProperty(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e6L, 0x51fc4d939a306dc0L, "Scaling");
  }
}
