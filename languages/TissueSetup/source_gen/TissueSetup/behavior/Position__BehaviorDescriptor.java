package TissueSetup.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.math.BigDecimal;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import Units.behavior.Distance__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SProperty;

public final class Position__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, "TissueSetup.structure.Position");

  public static final SMethod<String> get_position_xcoord_string_id4DdJmqSGafn = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_position_xcoord_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("4DdJmqSGafn").build();
  public static final SMethod<String> get_position_ycoord_string_id4DdJmqSGaIc = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_position_ycoord_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("4DdJmqSGaIc").build();
  public static final SMethod<String> get_position_zcoord_string_id4DdJmqSGdUQ = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_position_zcoord_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("4DdJmqSGdUQ").build();
  public static final SMethod<BigDecimal> get_position_xcoord_decimal_id5yIQRIor6fe = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_position_xcoord_decimal").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("5yIQRIor6fe").build();
  public static final SMethod<BigDecimal> get_position_ycoord_decimal_id1r0uutBEDZt = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_position_ycoord_decimal").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("1r0uutBEDZt").build();
  public static final SMethod<BigDecimal> get_position_zcoord_decimal_id1r0uutBEEFm = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_position_zcoord_decimal").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("1r0uutBEEFm").build();
  public static final SMethod<Integer> get_position_X_gridpoint_id57WjpeqnuX1 = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_position_X_gridpoint").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("57WjpeqnuX1").build();
  public static final SMethod<Integer> get_position_Y_gridpoint_id57WjpeqnDsZ = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_position_Y_gridpoint").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("57WjpeqnDsZ").build();
  public static final SMethod<Integer> get_position_Z_gridpoint_id57WjpeqnGbT = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_position_Z_gridpoint").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("57WjpeqnGbT").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(get_position_xcoord_string_id4DdJmqSGafn, get_position_ycoord_string_id4DdJmqSGaIc, get_position_zcoord_string_id4DdJmqSGdUQ, get_position_xcoord_decimal_id5yIQRIor6fe, get_position_ycoord_decimal_id1r0uutBEDZt, get_position_zcoord_decimal_id1r0uutBEEFm, get_position_X_gridpoint_id57WjpeqnuX1, get_position_Y_gridpoint_id57WjpeqnDsZ, get_position_Z_gridpoint_id57WjpeqnGbT);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static String get_position_xcoord_string_id4DdJmqSGafn(@NotNull SNode __thisNode__) {
    return Position__BehaviorDescriptor.get_position_xcoord_decimal_id5yIQRIor6fe.invoke(__thisNode__).toString();
  }
  /*package*/ static String get_position_ycoord_string_id4DdJmqSGaIc(@NotNull SNode __thisNode__) {
    return Position__BehaviorDescriptor.get_position_ycoord_decimal_id1r0uutBEDZt.invoke(__thisNode__).toString();
  }
  /*package*/ static String get_position_zcoord_string_id4DdJmqSGdUQ(@NotNull SNode __thisNode__) {
    return Position__BehaviorDescriptor.get_position_zcoord_decimal_id1r0uutBEEFm.invoke(__thisNode__).toString();
  }
  /*package*/ static BigDecimal get_position_xcoord_decimal_id5yIQRIor6fe(@NotNull SNode __thisNode__) {
    return Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.X_Coord$jBPh));
  }
  /*package*/ static BigDecimal get_position_ycoord_decimal_id1r0uutBEDZt(@NotNull SNode __thisNode__) {
    return Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Y_Coord$jHeC));
  }
  /*package*/ static BigDecimal get_position_zcoord_decimal_id1r0uutBEEFm(@NotNull SNode __thisNode__) {
    return Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Z_Coord$jHVF));
  }
  /*package*/ static int get_position_X_gridpoint_id57WjpeqnuX1(@NotNull SNode __thisNode__) {
    SNode grid;
    if ((SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false) != null)) {
      // Here we are getting the position of a cell or tissue, so get the tissue container.
      grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);
    } else {
      // Otherwise, we're working with something that is placed in the world, so get the world container.
      grid = SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.World_Container$fW, false, false), LINKS.grid$mgtJ);
    }
    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }

    int x_coord = (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.X_Coord$jBPh), ((float) scale));
    return x_coord;
  }
  /*package*/ static int get_position_Y_gridpoint_id57WjpeqnDsZ(@NotNull SNode __thisNode__) {
    SNode grid;
    if ((SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false) != null)) {
      // Here we are getting the position of a cell or tissue, so get the tissue container.
      grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);
    } else {
      // Otherwise, we're working with something that is placed in the world, so get the world container.
      grid = SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.World_Container$fW, false, false), LINKS.grid$mgtJ);
    }
    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }

    int y_coord = (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Y_Coord$jHeC), ((float) scale));
    return y_coord;
  }
  /*package*/ static int get_position_Z_gridpoint_id57WjpeqnGbT(@NotNull SNode __thisNode__) {
    SNode grid;
    if ((SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false) != null)) {
      // Here we are getting the position of a cell or tissue, so get the tissue container.
      grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);
    } else {
      // Otherwise, we're working with something that is placed in the world, so get the world container.
      grid = SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.World_Container$fW, false, false), LINKS.grid$mgtJ);
    }
    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }

    int z_coord = (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Z_Coord$jHVF), ((float) scale));
    return z_coord;
  }

  /*package*/ Position__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((String) get_position_xcoord_string_id4DdJmqSGafn(node));
      case 1:
        return (T) ((String) get_position_ycoord_string_id4DdJmqSGaIc(node));
      case 2:
        return (T) ((String) get_position_zcoord_string_id4DdJmqSGdUQ(node));
      case 3:
        return (T) ((BigDecimal) get_position_xcoord_decimal_id5yIQRIor6fe(node));
      case 4:
        return (T) ((BigDecimal) get_position_ycoord_decimal_id1r0uutBEDZt(node));
      case 5:
        return (T) ((BigDecimal) get_position_zcoord_decimal_id1r0uutBEEFm(node));
      case 6:
        return (T) ((Integer) get_position_X_gridpoint_id57WjpeqnuX1(node));
      case 7:
        return (T) ((Integer) get_position_Y_gridpoint_id57WjpeqnDsZ(node));
      case 8:
        return (T) ((Integer) get_position_Z_gridpoint_id57WjpeqnGbT(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink X_Coord$jBPh = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, 0x47c452e0e9687f75L, "X_Coord");
    /*package*/ static final SContainmentLink Y_Coord$jHeC = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, 0x47c452e0e9687f77L, "Y_Coord");
    /*package*/ static final SContainmentLink Z_Coord$jHVF = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef87L, 0x47c452e0e9687f7aL, "Z_Coord");
    /*package*/ static final SReferenceLink World_Container$fGL6 = MetaAdapterFactory.getReferenceLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef85L, 0x1d99d55b84fedbc7L, "World_Container");
    /*package*/ static final SContainmentLink grid$mgtJ = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e3L, 0x73ca99e5119b19e4L, "grid");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Tissue_And_Cell_Container$ni = MetaAdapterFactory.getConcept(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef85L, "TissueSetup.structure.Tissue_And_Cell_Container");
    /*package*/ static final SConcept World_Container$fW = MetaAdapterFactory.getConcept(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e3L, "WorldSetup.structure.World_Container");
  }

  private static final class PROPS {
    /*package*/ static final SProperty Scaling$mTyg = MetaAdapterFactory.getProperty(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e6L, 0x51fc4d939a306dc0L, "Scaling");
  }
}
