package TissueSetup.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.math.BigDecimal;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import Units.behavior.Distance__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;

public final class Arrangement_Cylindrical__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef91L, "TissueSetup.structure.Arrangement_Cylindrical");

  public static final SMethod<String> get_cross_section_cells_id2VHjcBpEg27 = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_cross_section_cells").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2VHjcBpEg27").build();
  public static final SMethod<String> get_length_in_cells_id4DdJmqSFaKv = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_length_in_cells").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).id("4DdJmqSFaKv").build();
  public static final SMethod<String> get_radius_string_id4DdJmqSFkkm = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_radius_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("4DdJmqSFkkm").build();
  public static final SMethod<BigDecimal> get_radius_decimal_id3wWy5vw4lLO = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_radius_decimal").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("3wWy5vw4lLO").build();
  public static final SMethod<Integer> get_radius_gridpoints_id57Wjpeqocpj = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_radius_gridpoints").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("57Wjpeqocpj").build();
  public static final SMethod<Integer> get_total_cell_number_id4XZPqyVOpH$ = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_total_cell_number").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).id("4XZPqyVOpH$").build();
  public static final SMethod<Integer> calculate_total_ablumenal_steps_id506$KtO_VOJ = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("calculate_total_ablumenal_steps").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("506$KtO_VOJ").build();
  public static final SMethod<Integer> get_total_width_gridpoints_id1QpPlI52lcy = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("get_total_width_gridpoints").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("1QpPlI52lcy").build();
  public static final SMethod<BigDecimal> get_total_width_decimal_id2xqP3eG1lgv = new SMethodBuilder<BigDecimal>(new SJavaCompoundTypeImpl(BigDecimal.class)).name("get_total_width_decimal").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2xqP3eG1lgv").build();
  public static final SMethod<Integer> calculate_cross_section_cells_id506$KtOAF5K = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("calculate_cross_section_cells").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("506$KtOAF5K").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(get_cross_section_cells_id2VHjcBpEg27, get_length_in_cells_id4DdJmqSFaKv, get_radius_string_id4DdJmqSFkkm, get_radius_decimal_id3wWy5vw4lLO, get_radius_gridpoints_id57Wjpeqocpj, get_total_cell_number_id4XZPqyVOpH$, calculate_total_ablumenal_steps_id506$KtO_VOJ, get_total_width_gridpoints_id1QpPlI52lcy, get_total_width_decimal_id2xqP3eG1lgv, calculate_cross_section_cells_id506$KtOAF5K);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static String get_cross_section_cells_id2VHjcBpEg27(@NotNull SNode __thisNode__) {
    String cross_section = String.valueOf(SPropertyOperations.getInteger(__thisNode__, PROPS.cylinder_cross_section_cells$pzjl));
    return cross_section;
  }
  /*package*/ static String get_length_in_cells_id4DdJmqSFaKv(@NotNull SNode __thisNode__) {
    String length = String.valueOf(SPropertyOperations.getInteger(__thisNode__, PROPS.cylinder_length_in_cells$pzLn));
    return length;
  }
  /*package*/ static String get_radius_string_id4DdJmqSFkkm(@NotNull SNode __thisNode__) {
    String radius = Arrangement_Cylindrical__BehaviorDescriptor.get_radius_decimal_id3wWy5vw4lLO.invoke(__thisNode__).toString();
    return radius;
  }
  /*package*/ static BigDecimal get_radius_decimal_id3wWy5vw4lLO(@NotNull SNode __thisNode__) {
    BigDecimal radius = Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Cylinder_Radius$5MFi));
    return radius;
  }
  /*package*/ static int get_radius_gridpoints_id57Wjpeqocpj(@NotNull SNode __thisNode__) {
    SNode grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);
    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }
    int radius = (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.Cylinder_Radius$5MFi), ((float) scale));
    return radius;
  }
  /*package*/ static int get_total_cell_number_id4XZPqyVOpH$(@NotNull SNode __thisNode__) {
    return SPropertyOperations.getInteger(__thisNode__, PROPS.cylinder_cross_section_cells$pzjl) * SPropertyOperations.getInteger(__thisNode__, PROPS.cylinder_length_in_cells$pzLn);
  }
  /*package*/ static int calculate_total_ablumenal_steps_id506$KtO_VOJ(@NotNull SNode __thisNode__) {
    SNode world_grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);

    int radius_gridpoints = ((int) Arrangement_Cylindrical__BehaviorDescriptor.get_radius_gridpoints_id57Wjpeqocpj.invoke(__thisNode__));

    double d_steps = 2 * 3.14 * radius_gridpoints;
    int i_steps = ((int) d_steps);
    return i_steps;
  }
  /*package*/ static int get_total_width_gridpoints_id1QpPlI52lcy(@NotNull SNode __thisNode__) {
    int width_gridpoint_int = -1;
    SNode world_grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);

    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(world_grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(world_grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }

    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_Type$C4, false, false), LINKS.cell_type$E3tO), LINKS.Shape$q0mn), CONCEPTS.Shape_Rectangular$1r)) {
      width_gridpoint_int = (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_Type$C4, false, false), LINKS.cell_type$E3tO), LINKS.Shape$q0mn), CONCEPTS.Shape_Rectangular$1r), LINKS.Width$jAnj), ((float) scale));
    }
    return SPropertyOperations.getInteger(__thisNode__, PROPS.cylinder_length_in_cells$pzLn) * width_gridpoint_int;
  }
  /*package*/ static BigDecimal get_total_width_decimal_id2xqP3eG1lgv(@NotNull SNode __thisNode__) {
    BigDecimal width_decimal_value = BigDecimal.valueOf(-1);
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_Type$C4, false, false), LINKS.cell_type$E3tO), LINKS.Shape$q0mn), CONCEPTS.Shape_Rectangular$1r)) {
      width_decimal_value = Distance__BehaviorDescriptor.get_distance_value_decimal_id3wWy5vw4PXg.invoke(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_Type$C4, false, false), LINKS.cell_type$E3tO), LINKS.Shape$q0mn), CONCEPTS.Shape_Rectangular$1r), LINKS.Width$jAnj));
    }
    return BigDecimal.valueOf(SPropertyOperations.getInteger(__thisNode__, PROPS.cylinder_length_in_cells$pzLn)).multiply(width_decimal_value);
  }
  /*package*/ static int calculate_cross_section_cells_id506$KtOAF5K(@NotNull SNode __thisNode__) {
    SNode world_grid = SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_And_Cell_Container$ni, false, false), LINKS.World_Container$fGL6), LINKS.grid$mgtJ);
    int height_gridpoint_int = -1;

    float scale = 0;
    if (SEnumOperations.isMember(SPropertyOperations.getEnum(world_grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e48L)) {
      scale = ((float) 0.5);
    } else if (SEnumOperations.isMember(SPropertyOperations.getEnum(world_grid, PROPS.Scaling$mTyg), 0x51fc4d939a305e4aL)) {
      scale = ((float) 1.0);
    }

    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(__thisNode__), CONCEPTS.Tissue_Type$C4), LINKS.cell_type$E3tO), LINKS.Shape$q0mn), CONCEPTS.Shape_Rectangular$1r)) {
      height_gridpoint_int = (int) Distance__BehaviorDescriptor.get_distance_in_gridpoints_id3wWy5vw4P8z.invoke(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(__thisNode__, CONCEPTS.Tissue_Type$C4, false, false), LINKS.cell_type$E3tO), LINKS.Shape$q0mn), CONCEPTS.Shape_Rectangular$1r), LINKS.Height$jAPl), ((float) scale));
    }

    int cross_section_cells = ((int) Arrangement_Cylindrical__BehaviorDescriptor.calculate_total_ablumenal_steps_id506$KtO_VOJ.invoke(__thisNode__)) / height_gridpoint_int;
    return cross_section_cells;
  }

  /*package*/ Arrangement_Cylindrical__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((String) get_cross_section_cells_id2VHjcBpEg27(node));
      case 1:
        return (T) ((String) get_length_in_cells_id4DdJmqSFaKv(node));
      case 2:
        return (T) ((String) get_radius_string_id4DdJmqSFkkm(node));
      case 3:
        return (T) ((BigDecimal) get_radius_decimal_id3wWy5vw4lLO(node));
      case 4:
        return (T) ((Integer) get_radius_gridpoints_id57Wjpeqocpj(node));
      case 5:
        return (T) ((Integer) get_total_cell_number_id4XZPqyVOpH$(node));
      case 6:
        return (T) ((Integer) calculate_total_ablumenal_steps_id506$KtO_VOJ(node));
      case 7:
        return (T) ((Integer) get_total_width_gridpoints_id1QpPlI52lcy(node));
      case 8:
        return (T) ((BigDecimal) get_total_width_decimal_id2xqP3eG1lgv(node));
      case 9:
        return (T) ((Integer) calculate_cross_section_cells_id506$KtOAF5K(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class PROPS {
    /*package*/ static final SProperty cylinder_cross_section_cells$pzjl = MetaAdapterFactory.getProperty(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef91L, 0x56b8f8b9a96cef93L, "cylinder_cross_section_cells");
    /*package*/ static final SProperty cylinder_length_in_cells$pzLn = MetaAdapterFactory.getProperty(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef91L, 0x56b8f8b9a96cef95L, "cylinder_length_in_cells");
    /*package*/ static final SProperty Scaling$mTyg = MetaAdapterFactory.getProperty(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e6L, 0x51fc4d939a306dc0L, "Scaling");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink Cylinder_Radius$5MFi = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef91L, 0x383c8857e010ed42L, "Cylinder_Radius");
    /*package*/ static final SReferenceLink World_Container$fGL6 = MetaAdapterFactory.getReferenceLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef85L, 0x1d99d55b84fedbc7L, "World_Container");
    /*package*/ static final SContainmentLink grid$mgtJ = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e3L, 0x73ca99e5119b19e4L, "grid");
    /*package*/ static final SReferenceLink cell_type$E3tO = MetaAdapterFactory.getReferenceLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x7290577338f6917fL, 0x7290577338f69180L, "cell_type");
    /*package*/ static final SContainmentLink Shape$q0mn = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef8bL, 0x56b8f8b9a96cefbbL, "Shape");
    /*package*/ static final SContainmentLink Width$jAnj = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef9dL, 0x47c452e0e9687f6cL, "Width");
    /*package*/ static final SContainmentLink Height$jAPl = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef9dL, 0x47c452e0e9687f6eL, "Height");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Tissue_And_Cell_Container$ni = MetaAdapterFactory.getConcept(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef85L, "TissueSetup.structure.Tissue_And_Cell_Container");
    /*package*/ static final SConcept Tissue_Type$C4 = MetaAdapterFactory.getConcept(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x7290577338f6917fL, "TissueSetup.structure.Tissue_Type");
    /*package*/ static final SConcept Shape_Rectangular$1r = MetaAdapterFactory.getConcept(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef9dL, "TissueSetup.structure.Shape_Rectangular");
  }
}
