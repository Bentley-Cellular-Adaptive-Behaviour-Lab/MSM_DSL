package WorldLang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public final class Gradient_Shape_SinkAndSource__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x2e0657be386ef3ceL, "WorldLang.structure.Gradient_Shape_SinkAndSource");

  public static final SMethod<String> get_sourcex_string_id2OHr9yL6aJ5 = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_sourcex_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2OHr9yL6aJ5").build();
  public static final SMethod<String> get_sourcey_string_id2OHr9yL6cfy = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_sourcey_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2OHr9yL6cfy").build();
  public static final SMethod<String> get_sourcez_string_id2OHr9yL6deA = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_sourcez_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2OHr9yL6deA").build();
  public static final SMethod<String> get_sinkx_string_id2OHr9yL6e46 = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_sinkx_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2OHr9yL6e46").build();
  public static final SMethod<String> get_sinky_string_id2OHr9yL6eOG = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_sinky_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2OHr9yL6eOG").build();
  public static final SMethod<String> get_sinkz_string_id2OHr9yL6fPc = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("get_sinkz_string").modifiers(0, AccessPrivileges.PUBLIC).concept(CONCEPT).id("2OHr9yL6fPc").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(get_sourcex_string_id2OHr9yL6aJ5, get_sourcey_string_id2OHr9yL6cfy, get_sourcez_string_id2OHr9yL6deA, get_sinkx_string_id2OHr9yL6e46, get_sinky_string_id2OHr9yL6eOG, get_sinkz_string_id2OHr9yL6fPc);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static String get_sourcex_string_id2OHr9yL6aJ5(@NotNull SNode __thisNode__) {
    return Source__BehaviorDescriptor.get_source_x_string_id1r0uutBEy5V.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.SinkAndSource$aCJG), LINKS.Source$59pe));
  }
  /*package*/ static String get_sourcey_string_id2OHr9yL6cfy(@NotNull SNode __thisNode__) {
    return Source__BehaviorDescriptor.get_source_y_string_id1r0uutBEy6b.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.SinkAndSource$aCJG), LINKS.Source$59pe));
  }
  /*package*/ static String get_sourcez_string_id2OHr9yL6deA(@NotNull SNode __thisNode__) {
    return Source__BehaviorDescriptor.get_source_z_string_id1r0uutBEy6r.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.SinkAndSource$aCJG), LINKS.Source$59pe));
  }
  /*package*/ static String get_sinkx_string_id2OHr9yL6e46(@NotNull SNode __thisNode__) {
    return Sink__BehaviorDescriptor.get_sink_x_string_id2OHr9yL68kM.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.SinkAndSource$aCJG), LINKS.Sink$58Vc));
  }
  /*package*/ static String get_sinky_string_id2OHr9yL6eOG(@NotNull SNode __thisNode__) {
    return Sink__BehaviorDescriptor.get_sink_y_string_id2OHr9yL68kW.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.SinkAndSource$aCJG), LINKS.Sink$58Vc));
  }
  /*package*/ static String get_sinkz_string_id2OHr9yL6fPc(@NotNull SNode __thisNode__) {
    return Sink__BehaviorDescriptor.get_sink_z_string_id11q$FfsWVZM.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(__thisNode__, LINKS.SinkAndSource$aCJG), LINKS.Sink$58Vc));
  }

  /*package*/ Gradient_Shape_SinkAndSource__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((String) get_sourcex_string_id2OHr9yL6aJ5(node));
      case 1:
        return (T) ((String) get_sourcey_string_id2OHr9yL6cfy(node));
      case 2:
        return (T) ((String) get_sourcez_string_id2OHr9yL6deA(node));
      case 3:
        return (T) ((String) get_sinkx_string_id2OHr9yL6e46(node));
      case 4:
        return (T) ((String) get_sinky_string_id2OHr9yL6eOG(node));
      case 5:
        return (T) ((String) get_sinkz_string_id2OHr9yL6fPc(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink SinkAndSource$aCJG = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x2e0657be386ef3ceL, 0x2e0657be386ef3e2L, "SinkAndSource");
    /*package*/ static final SContainmentLink Source$59pe = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0xa2797e0f27a84eaL, 0xa2797e0f27a8500L, "Source");
    /*package*/ static final SContainmentLink Sink$58Vc = MetaAdapterFactory.getContainmentLink(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0xa2797e0f27a84eaL, 0xa2797e0f27a84feL, "Sink");
  }
}
