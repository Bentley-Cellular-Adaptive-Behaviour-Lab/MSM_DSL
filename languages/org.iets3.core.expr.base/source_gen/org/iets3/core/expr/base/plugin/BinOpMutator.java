package org.iets3.core.expr.base.plugin;

/*Generated by MPS */

import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class BinOpMutator implements Mutator {

  private SAbstractConcept replaceWith;
  private SAbstractConcept source;

  public BinOpMutator(SAbstractConcept src, SAbstractConcept repl) {
    replaceWith = repl;
    source = src;
  }
  @Override
  public boolean appliesTo(SNode n) {
    return SNodeOperations.isInstanceOf(n, SNodeOperations.asSConcept(source));
  }

  @Override
  public SAbstractConcept getMutatedConcept() {
    return source;
  }
  @Override
  public SNode mutate(SNode source) {
    SNode bin = SNodeOperations.cast(SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(replaceWith)), CONCEPTS.BinaryExpression$j$);
    SLinkOperations.setTarget(bin, LINKS.left$zxUa, SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(source, CONCEPTS.BinaryExpression$j$), LINKS.left$zxUa)));
    SLinkOperations.setTarget(bin, LINKS.right$zBjx, SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(source, CONCEPTS.BinaryExpression$j$), LINKS.right$zBjx)));
    return bin;
  }

  @Override
  public boolean isReversible() {
    return true;
  }

  @Override
  public Mutator reversed() {
    return new BinOpMutator(replaceWith, source);
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BinaryExpression$j$ = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c99c15L, "org.iets3.core.expr.base.structure.BinaryExpression");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink left$zxUa = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c99c15L, 0x46ff3b3d86c99c16L, "left");
    /*package*/ static final SContainmentLink right$zBjx = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c99c15L, 0x46ff3b3d86c99c18L, "right");
  }
}
