package org.iets3.core.expr.base.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public final class IControlAdvancedFeatures_old__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x69e8e71b93a1b282L, "org.iets3.core.expr.base.structure.IControlAdvancedFeatures_old");

  public static final SMethod<Boolean> allowOptions_id6BCTLIjCraB = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowOptions").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("6BCTLIjCraB").build();
  public static final SMethod<Boolean> allowAttempts_id6BCTLIjCrbW = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowAttempts").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("6BCTLIjCrbW").build();
  public static final SMethod<Boolean> allowReveal_idk9boAtHuqo = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowReveal").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("k9boAtHuqo").build();
  public static final SMethod<Boolean> allowShowEffect_idk9boAtHFco = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowShowEffect").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("k9boAtHFco").build();
  public static final SMethod<Boolean> allowSuppressErrors_id5hiN5PkjlJi = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowSuppressErrors").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5hiN5PkjlJi").build();
  public static final SMethod<Boolean> areOptionsAllowed_id4FREEt6zKrJ = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("areOptionsAllowed").modifiers(SModifiersImpl.create(1, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4FREEt6zKrJ").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> areAttemptsAllowed_id4FREEt6zM91 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("areAttemptsAllowed").modifiers(SModifiersImpl.create(1, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4FREEt6zM91").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> allowReveal_idk9boAtHqZL = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowReveal").modifiers(SModifiersImpl.create(1, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("k9boAtHqZL").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> allowShowEffect_idk9boAtHEPS = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowShowEffect").modifiers(SModifiersImpl.create(1, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("k9boAtHEPS").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> allowSuppressErrors_id5hiN5PkjlUJ = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("allowSuppressErrors").modifiers(SModifiersImpl.create(1, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5hiN5PkjlUJ").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(allowOptions_id6BCTLIjCraB, allowAttempts_id6BCTLIjCrbW, allowReveal_idk9boAtHuqo, allowShowEffect_idk9boAtHFco, allowSuppressErrors_id5hiN5PkjlJi, areOptionsAllowed_id4FREEt6zKrJ, areAttemptsAllowed_id4FREEt6zM91, allowReveal_idk9boAtHqZL, allowShowEffect_idk9boAtHEPS, allowSuppressErrors_id5hiN5PkjlUJ);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static boolean allowOptions_id6BCTLIjCraB(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean allowAttempts_id6BCTLIjCrbW(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean allowReveal_idk9boAtHuqo(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean allowShowEffect_idk9boAtHFco(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean allowSuppressErrors_id5hiN5PkjlJi(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean areOptionsAllowed_id4FREEt6zKrJ(@NotNull SAbstractConcept __thisConcept__, SNode n) {
    SNode r = SNodeOperations.as(SNodeOperations.getContainingRoot(n), CONCEPTS.IControlAdvancedFeatures_old$V6);
    return r == null || (boolean) IControlAdvancedFeatures_old__BehaviorDescriptor.allowOptions_id6BCTLIjCraB.invoke(r);
  }
  /*package*/ static boolean areAttemptsAllowed_id4FREEt6zM91(@NotNull SAbstractConcept __thisConcept__, SNode n) {
    SNode r = SNodeOperations.as(SNodeOperations.getContainingRoot(n), CONCEPTS.IControlAdvancedFeatures_old$V6);
    return r == null || (boolean) IControlAdvancedFeatures_old__BehaviorDescriptor.allowAttempts_id6BCTLIjCrbW.invoke(r);
  }
  /*package*/ static boolean allowReveal_idk9boAtHqZL(@NotNull SAbstractConcept __thisConcept__, SNode n) {
    SNode r = SNodeOperations.as(SNodeOperations.getContainingRoot(n), CONCEPTS.IControlAdvancedFeatures_old$V6);
    return r == null || (boolean) IControlAdvancedFeatures_old__BehaviorDescriptor.allowReveal_idk9boAtHuqo.invoke(r);
  }
  /*package*/ static boolean allowShowEffect_idk9boAtHEPS(@NotNull SAbstractConcept __thisConcept__, SNode n) {
    SNode r = SNodeOperations.as(SNodeOperations.getContainingRoot(n), CONCEPTS.IControlAdvancedFeatures_old$V6);
    return r == null || (boolean) IControlAdvancedFeatures_old__BehaviorDescriptor.allowShowEffect_idk9boAtHFco.invoke(r);
  }
  /*package*/ static boolean allowSuppressErrors_id5hiN5PkjlUJ(@NotNull SAbstractConcept __thisConcept__, SNode n) {
    SNode r = SNodeOperations.as(SNodeOperations.getContainingRoot(n), CONCEPTS.IControlAdvancedFeatures_old$V6);
    return r == null || (boolean) IControlAdvancedFeatures_old__BehaviorDescriptor.allowSuppressErrors_id5hiN5PkjlJi.invoke(r);
  }

  /*package*/ IControlAdvancedFeatures_old__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Boolean) allowOptions_id6BCTLIjCraB(node));
      case 1:
        return (T) ((Boolean) allowAttempts_id6BCTLIjCrbW(node));
      case 2:
        return (T) ((Boolean) allowReveal_idk9boAtHuqo(node));
      case 3:
        return (T) ((Boolean) allowShowEffect_idk9boAtHFco(node));
      case 4:
        return (T) ((Boolean) allowSuppressErrors_id5hiN5PkjlJi(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 5:
        return (T) ((Boolean) areOptionsAllowed_id4FREEt6zKrJ(concept, (SNode) parameters[0]));
      case 6:
        return (T) ((Boolean) areAttemptsAllowed_id4FREEt6zM91(concept, (SNode) parameters[0]));
      case 7:
        return (T) ((Boolean) allowReveal_idk9boAtHqZL(concept, (SNode) parameters[0]));
      case 8:
        return (T) ((Boolean) allowShowEffect_idk9boAtHEPS(concept, (SNode) parameters[0]));
      case 9:
        return (T) ((Boolean) allowSuppressErrors_id5hiN5PkjlUJ(concept, (SNode) parameters[0]));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IControlAdvancedFeatures_old$V6 = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x69e8e71b93a1b282L, "org.iets3.core.expr.base.structure.IControlAdvancedFeatures_old");
  }
}
