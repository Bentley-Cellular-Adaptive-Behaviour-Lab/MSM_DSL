package org.iets3.core.expr.base.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public final class pullDownTypeIntoCast_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public pullDownTypeIntoCast_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:7d06857c-251f-4454-ac9c-c398e5200a04(org.iets3.core.expr.base.intentions)", "3237442461099916352"));
  }
  @Override
  public String getPresentation() {
    return "pullDownTypeIntoCast";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return (SNodeOperations.getNodeAncestor(node, CONCEPTS.IOptionallyTyped$GO, false, false) != null) && ConstraintHelper.canReplaceNodeWithConcept(node, CONCEPTS.CastExpression$Df);
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "TYPES: " + ("Pull down Type from Declaration above <..:T>");
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      SNode ot = SNodeOperations.getNodeAncestor(node, CONCEPTS.IOptionallyTyped$GO, false, false);
      SNode tc = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2d8b76405dcec884L, "org.iets3.core.expr.base.structure.CastExpression"));
      SLinkOperations.setTarget(tc, LINKS.expr$j3O8, SNodeOperations.copyNode(node));
      SLinkOperations.setTarget(tc, LINKS.expectedType$SdFI, SNodeOperations.copyNode(SLinkOperations.getTarget(ot, LINKS.type$1eya)));
      SNodeOperations.replaceWithAnother(node, tc);
      SNodeOperations.deleteNode(SLinkOperations.getTarget(ot, LINKS.type$1eya));

    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return pullDownTypeIntoCast_Intention.this;
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IOptionallyTyped$GO = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1ab0b7cL, "org.iets3.core.expr.base.structure.IOptionallyTyped");
    /*package*/ static final SConcept CastExpression$Df = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2d8b76405dcec884L, "org.iets3.core.expr.base.structure.CastExpression");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink expr$j3O8 = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2d8b76405dcec884L, 0x2142daea638ddd94L, "expr");
    /*package*/ static final SContainmentLink expectedType$SdFI = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2d8b76405dcec884L, 0x2d8b76405dcec889L, "expectedType");
    /*package*/ static final SContainmentLink type$1eya = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1ab0b7cL, 0x62632b96c1ab0b7dL, "type");
  }
}
