package org.iets3.core.expr.base.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.iets3.core.expr.base.runtime.runtime.PTF;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public class typeof_FailExpr_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_FailExpr_InferenceRule() {
  }
  public void applyRule(final SNode fe, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (!(typeCheckingContext.isSingleTypeComputation())) {
      {
        SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(fe, LINKS.message$kl8H);
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "411710798114977190", 0, null);
        typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "411710798114977193", true), (SNode) createJoinType_oh2v7v_a1a0c0a0a0b(PTF.createStringType()), true, true, _info_12389875345);
      }
    }

    if (SLinkOperations.getTarget(fe, LINKS.type$AJf9) != null) {
      {
        SNode _nodeToCheck_1029348928467 = fe;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7275867333401410206", 0, null);
        typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7275867333401410213", true), (SNode) typeCheckingContext.typeOf(SLinkOperations.getTarget(fe, LINKS.type$AJf9), "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7275867333401410208", true), _info_12389875345);
      }
    }

  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.FailExpr$SB;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createJoinType_oh2v7v_a1a0c0a0a0b(SNode p0) {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.JoinType$re);
    {
      SNodeBuilder n1 = n0.forChild(LINKS.argument$Iuyp).initNode(p0, CONCEPTS.IType$a9, false);
      SNodeBuilder n2 = n1.forSibling().init(CONCEPTS.MessageValueType$N1);
    }
    return n0.getResult();
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink message$kl8H = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5b6b0ca1fd5e3baL, 0x5b6b0ca1fd5e3beL, "message");
    /*package*/ static final SContainmentLink type$AJf9 = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5b6b0ca1fd5e3baL, 0x64f912ca604267f5L, "type");
    /*package*/ static final SContainmentLink argument$Iuyp = MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1129e737f02L, 0x1129e73a76aL, "argument");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept FailExpr$SB = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5b6b0ca1fd5e3baL, "org.iets3.core.expr.base.structure.FailExpr");
    /*package*/ static final SConcept JoinType$re = MetaAdapterFactory.getConcept(0x7a5dda6291404668L, 0xab76d5ed1746f2b2L, 0x1129e737f02L, "jetbrains.mps.lang.typesystem.structure.JoinType");
    /*package*/ static final SInterfaceConcept IType$a9 = MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x11f8a0774f2L, "jetbrains.mps.lang.core.structure.IType");
    /*package*/ static final SConcept MessageValueType$N1 = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x498a44b77ac768faL, "org.iets3.core.expr.base.structure.MessageValueType");
  }
}
