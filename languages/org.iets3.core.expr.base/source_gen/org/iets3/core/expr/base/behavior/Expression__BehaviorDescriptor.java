package org.iets3.core.expr.base.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ILeftCombinator;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;
import org.jetbrains.mps.openapi.model.SNodeReference;
import java.util.ArrayList;
import java.util.Objects;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public final class Expression__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L, "org.iets3.core.expr.base.structure.Expression");

  public static final SMethod<String> renderReadable_id4Y0vh0cfqjE = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("renderReadable").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4Y0vh0cfqjE").build();
  public static final SMethod<Boolean> isStaticallyEvaluatable_id3NBP8_O4e8l = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isStaticallyEvaluatable").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3NBP8_O4e8l").build();
  public static final SMethod<Boolean> isSameAs_id7GwCuf2r4g6 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isSameAs").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("7GwCuf2r4g6").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Boolean> isDocumentationAllowed_id3ni3WiduMNJ = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isDocumentationAllowed").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3ni3WiduMNJ").build();
  public static final SMethod<List<String>> getContainmentStack_id6iqfHNBPmu8 = new SMethodBuilder<List<String>>(new SJavaCompoundTypeImpl((Class<List<String>>) ((Class) Object.class))).name("getContainmentStack").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("6iqfHNBPmu8").build();
  public static final SMethod<String> getContainmentStackAsString_id6iqfHNBPqvB = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getContainmentStackAsString").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("6iqfHNBPqvB").build(SMethodBuilder.createJavaParameter(String.class, ""));
  public static final SMethod<String> commaSeparatedRR_idHywGhj7zY_ = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("commaSeparatedRR").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("HywGhj7zY_").build(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<String> commaSeparatedGP_idHywGhj7Cp$ = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("commaSeparatedGP").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("HywGhj7Cp$").build(SMethodBuilder.createJavaParameter((Class<Iterable<SNode>>) ((Class) Object.class), ""));
  public static final SMethod<String> getPresentation_idhEwIMiw = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getPresentation").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("hEwIMiw").build();
  public static final SMethod<List<SNode>> getPathConstraintsToThis_id3QFQUsNJoQq = new SMethodBuilder<List<SNode>>(new SJavaCompoundTypeImpl((Class<List<SNode>>) ((Class) Object.class))).name("getPathConstraintsToThis").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("3QFQUsNJoQq").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(renderReadable_id4Y0vh0cfqjE, isStaticallyEvaluatable_id3NBP8_O4e8l, isSameAs_id7GwCuf2r4g6, isDocumentationAllowed_id3ni3WiduMNJ, getContainmentStack_id6iqfHNBPmu8, getContainmentStackAsString_id6iqfHNBPqvB, commaSeparatedRR_idHywGhj7zY_, commaSeparatedGP_idHywGhj7Cp$, getPresentation_idhEwIMiw, getPathConstraintsToThis_id3QFQUsNJoQq);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static String renderReadable_id4Y0vh0cfqjE(@NotNull SNode __thisNode__) {
    return "<" + SNodeOperations.getConcept(__thisNode__).getName() + ">";
  }
  @Deprecated
  /*package*/ static boolean isStaticallyEvaluatable_id3NBP8_O4e8l(@NotNull SNode __thisNode__) {
    return false;
  }
  /*package*/ static boolean isSameAs_id7GwCuf2r4g6(@NotNull SNode __thisNode__, SNode other) {
    if (other == null) {
      return false;
    }
    if (SNodeOperations.getConcept(__thisNode__) != SNodeOperations.getConcept(other)) {
      return false;
    }
    return __thisNode__ == other;
  }
  /*package*/ static boolean isDocumentationAllowed_id3ni3WiduMNJ(@NotNull SNode __thisNode__) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(__thisNode__), CONCEPTS.IAllowsDocInChildExpressions$L3);
  }
  /*package*/ static List<String> getContainmentStack_id6iqfHNBPmu8(@NotNull SNode __thisNode__) {
    return Sequence.fromIterable(SNodeOperations.ofConcept(SNodeOperations.getNodeAncestors(__thisNode__, null, true), CONCEPTS.IContainmentStackMember$ig)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !((boolean) IContainmentStackMember__BehaviorDescriptor.hideInStack_id6iqfHNBQFh1.invoke(it));
      }
    }).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return (String) IContainmentStackMember__BehaviorDescriptor.asString_id6iqfHNBPkjP.invoke(it);
      }
    }).toListSequence();
  }
  /*package*/ static String getContainmentStackAsString_id6iqfHNBPqvB(@NotNull SNode __thisNode__, final String indent) {
    return ListSequence.fromList(Expression__BehaviorDescriptor.getContainmentStack_id6iqfHNBPmu8.invoke(__thisNode__)).foldLeft("", new ILeftCombinator<String, String>() {
      public String combine(String s, String it) {
        return s + "\n" + indent + it;
      }
    });
  }
  /*package*/ static String commaSeparatedRR_idHywGhj7zY_(@NotNull SNode __thisNode__, Iterable<SNode> exprs) {
    StringBuffer bf = new StringBuffer();
    int i = 0;
    for (SNode e : Sequence.fromIterable(exprs)) {
      if (i > 0) {
        bf.append(", ");
      }
      bf.append(Expression__BehaviorDescriptor.renderReadable_id4Y0vh0cfqjE.invoke(e));
      i++;
    }
    return bf.toString();
  }
  /*package*/ static String commaSeparatedGP_idHywGhj7Cp$(@NotNull SNode __thisNode__, Iterable<SNode> nodes) {
    StringBuffer bf = new StringBuffer();
    int i = 0;
    for (SNode e : Sequence.fromIterable(nodes)) {
      if (i > 0) {
        bf.append(", ");
      }
      bf.append(BaseConcept__BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(e));
      i++;
    }
    return bf.toString();
  }
  /*package*/ static String getPresentation_idhEwIMiw(@NotNull SNode __thisNode__) {
    if (SNodeOperations.getConcept(__thisNode__).isAbstract()) {
      return "";
    }
    return ((String) Expression__BehaviorDescriptor.renderReadable_id4Y0vh0cfqjE.invoke(__thisNode__));
  }
  /*package*/ static List<SNode> getPathConstraintsToThis_id3QFQUsNJoQq(@NotNull SNode __thisNode__, SNode start) {
    List<SNode> ancestors = SNodeOperations.getNodeAncestors(__thisNode__, null, true);
    if (!(ListSequence.fromList(ancestors).contains(start))) {
      SNodeReference this_pointer = SNodeOperations.getPointer(__thisNode__);
      String from_pointer = "null";
      if ((start != null)) {
        from_pointer = SNodeOperations.getPointer(start).toString();
      }
      throw new RuntimeException("node " + this_pointer + " is not reachable from " + from_pointer);
    }
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode a : ListSequence.fromList(ancestors)) {
      if (SNodeOperations.isInstanceOf(a, CONCEPTS.IProvidePathConstraints$QM)) {
        List<SNode> pathConstraintsTo = IProvidePathConstraints__BehaviorDescriptor.getPathConstraintsTo_id3QFQUsNJoMc.invoke(SNodeOperations.cast(a, CONCEPTS.IProvidePathConstraints$QM), __thisNode__);
        ListSequence.fromList(result).addSequence(ListSequence.fromList(pathConstraintsTo));
      }
      if (Objects.equals(a, start)) {
        break;
      }
    }
    return result;
  }

  /*package*/ Expression__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((String) renderReadable_id4Y0vh0cfqjE(node));
      case 1:
        return (T) ((Boolean) isStaticallyEvaluatable_id3NBP8_O4e8l(node));
      case 2:
        return (T) ((Boolean) isSameAs_id7GwCuf2r4g6(node, (SNode) parameters[0]));
      case 3:
        return (T) ((Boolean) isDocumentationAllowed_id3ni3WiduMNJ(node));
      case 4:
        return (T) ((List<String>) getContainmentStack_id6iqfHNBPmu8(node));
      case 5:
        return (T) ((String) getContainmentStackAsString_id6iqfHNBPqvB(node, (String) parameters[0]));
      case 6:
        return (T) ((String) commaSeparatedRR_idHywGhj7zY_(node, (Iterable<SNode>) parameters[0]));
      case 7:
        return (T) ((String) commaSeparatedGP_idHywGhj7Cp$(node, (Iterable<SNode>) parameters[0]));
      case 8:
        return (T) ((String) getPresentation_idhEwIMiw(node));
      case 9:
        return (T) ((List<SNode>) getPathConstraintsToThis_id3QFQUsNJoQq(node, (SNode) parameters[0]));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IAllowsDocInChildExpressions$L3 = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x35d20fc48d83ecebL, "org.iets3.core.expr.base.structure.IAllowsDocInChildExpressions");
    /*package*/ static final SInterfaceConcept IContainmentStackMember$ig = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x649a3edce7d544d9L, "org.iets3.core.expr.base.structure.IContainmentStackMember");
    /*package*/ static final SInterfaceConcept IProvidePathConstraints$QM = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x3dabdba733bd8c80L, "org.iets3.core.expr.base.structure.IProvidePathConstraints");
  }
}
