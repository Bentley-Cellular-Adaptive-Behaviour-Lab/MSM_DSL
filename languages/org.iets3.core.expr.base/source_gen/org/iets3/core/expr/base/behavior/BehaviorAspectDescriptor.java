package org.iets3.core.expr.base.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIIsSingleSymbol__BehaviorDescriptor = new IIsSingleSymbol__BehaviorDescriptor();
  private final BHDescriptor myIMainSlot__BehaviorDescriptor = new IMainSlot__BehaviorDescriptor();
  private final BHDescriptor myICanBeLValue__BehaviorDescriptor = new ICanBeLValue__BehaviorDescriptor();
  private final BHDescriptor myAssignmentExpr__BehaviorDescriptor = new AssignmentExpr__BehaviorDescriptor();
  private final BHDescriptor myITypeOverridingContext__BehaviorDescriptor = new ITypeOverridingContext__BehaviorDescriptor();
  private final BHDescriptor myFailExpr__BehaviorDescriptor = new FailExpr__BehaviorDescriptor();
  private final BHDescriptor myITypeSupportsProposals__BehaviorDescriptor = new ITypeSupportsProposals__BehaviorDescriptor();
  private final BHDescriptor myIContextAssistantTypeProvider__BehaviorDescriptor = new IContextAssistantTypeProvider__BehaviorDescriptor();
  private final BHDescriptor myIContracted__BehaviorDescriptor = new IContracted__BehaviorDescriptor();
  private final BHDescriptor myContractItem__BehaviorDescriptor = new ContractItem__BehaviorDescriptor();
  private final BHDescriptor myPrecondition__BehaviorDescriptor = new Precondition__BehaviorDescriptor();
  private final BHDescriptor myContract__BehaviorDescriptor = new Contract__BehaviorDescriptor();
  private final BHDescriptor myPostcondition__BehaviorDescriptor = new Postcondition__BehaviorDescriptor();
  private final BHDescriptor myInvariant__BehaviorDescriptor = new Invariant__BehaviorDescriptor();
  private final BHDescriptor myPlainConstraint__BehaviorDescriptor = new PlainConstraint__BehaviorDescriptor();
  private final BHDescriptor myIMayAllowEffect__BehaviorDescriptor = new IMayAllowEffect__BehaviorDescriptor();
  private final BHDescriptor myTupleType__BehaviorDescriptor = new TupleType__BehaviorDescriptor();
  private final BHDescriptor myTupleValue__BehaviorDescriptor = new TupleValue__BehaviorDescriptor();
  private final BHDescriptor mySomeValExpr__BehaviorDescriptor = new SomeValExpr__BehaviorDescriptor();
  private final BHDescriptor myIMultiTraceRoot__BehaviorDescriptor = new IMultiTraceRoot__BehaviorDescriptor();
  private final BHDescriptor myIAssertConstraints__BehaviorDescriptor = new IAssertConstraints__BehaviorDescriptor();
  private final BHDescriptor myLogicalImpliesExpression__BehaviorDescriptor = new LogicalImpliesExpression__BehaviorDescriptor();
  private final BHDescriptor myErrorLiteral__BehaviorDescriptor = new ErrorLiteral__BehaviorDescriptor();
  private final BHDescriptor myErrorExpression__BehaviorDescriptor = new ErrorExpression__BehaviorDescriptor();
  private final BHDescriptor mySuccessType__BehaviorDescriptor = new SuccessType__BehaviorDescriptor();
  private final BHDescriptor myGenericErrorType__BehaviorDescriptor = new GenericErrorType__BehaviorDescriptor();
  private final BHDescriptor mySpecificErrorType__BehaviorDescriptor = new SpecificErrorType__BehaviorDescriptor();
  private final BHDescriptor myIAttemptType__BehaviorDescriptor = new IAttemptType__BehaviorDescriptor();
  private final BHDescriptor myRangeTarget__BehaviorDescriptor = new RangeTarget__BehaviorDescriptor();
  private final BHDescriptor myBangOp__BehaviorDescriptor = new BangOp__BehaviorDescriptor();
  private final BHDescriptor myTupleAccessExpr__BehaviorDescriptor = new TupleAccessExpr__BehaviorDescriptor();
  private final BHDescriptor myOptionType__BehaviorDescriptor = new OptionType__BehaviorDescriptor();
  private final BHDescriptor myIsSomeExpression__BehaviorDescriptor = new IsSomeExpression__BehaviorDescriptor();
  private final BHDescriptor myNoneLiteral__BehaviorDescriptor = new NoneLiteral__BehaviorDescriptor();
  private final BHDescriptor mySimpleExpressionValueInspector__BehaviorDescriptor = new SimpleExpressionValueInspector__BehaviorDescriptor();
  private final BHDescriptor myCastExpression__BehaviorDescriptor = new CastExpression__BehaviorDescriptor();
  private final BHDescriptor myOneOfTarget__BehaviorDescriptor = new OneOfTarget__BehaviorDescriptor();
  private final BHDescriptor myISingleSymbolRef__BehaviorDescriptor = new ISingleSymbolRef__BehaviorDescriptor();
  private final BHDescriptor myIScopeFilterer__BehaviorDescriptor = new IScopeFilterer__BehaviorDescriptor();
  private final BHDescriptor myOptionOrExpression__BehaviorDescriptor = new OptionOrExpression__BehaviorDescriptor();
  private final BHDescriptor myIMayReadMutableState__BehaviorDescriptor = new IMayReadMutableState__BehaviorDescriptor();
  private final BHDescriptor myHasValueOp__BehaviorDescriptor = new HasValueOp__BehaviorDescriptor();
  private final BHDescriptor myEmptyValue__BehaviorDescriptor = new EmptyValue__BehaviorDescriptor();
  private final BHDescriptor myIHasBaseType__BehaviorDescriptor = new IHasBaseType__BehaviorDescriptor();
  private final BHDescriptor myIProvidePathConstraints__BehaviorDescriptor = new IProvidePathConstraints__BehaviorDescriptor();
  private final BHDescriptor myIContextTypeProvider__BehaviorDescriptor = new IContextTypeProvider__BehaviorDescriptor();
  private final BHDescriptor myThisExpression__BehaviorDescriptor = new ThisExpression__BehaviorDescriptor();
  private final BHDescriptor myRevealer__BehaviorDescriptor = new Revealer__BehaviorDescriptor();
  private final BHDescriptor myIAllowDotOnLeft__BehaviorDescriptor = new IAllowDotOnLeft__BehaviorDescriptor();
  private final BHDescriptor myIAllowDeletionOfDot__BehaviorDescriptor = new IAllowDeletionOfDot__BehaviorDescriptor();
  private final BHDescriptor myIRunningInterpreterContext__BehaviorDescriptor = new IRunningInterpreterContext__BehaviorDescriptor();
  private final BHDescriptor myBinaryExpression__BehaviorDescriptor = new BinaryExpression__BehaviorDescriptor();
  private final BHDescriptor myPlusExpression__BehaviorDescriptor = new PlusExpression__BehaviorDescriptor();
  private final BHDescriptor myMulExpression__BehaviorDescriptor = new MulExpression__BehaviorDescriptor();
  private final BHDescriptor myMinusExpression__BehaviorDescriptor = new MinusExpression__BehaviorDescriptor();
  private final BHDescriptor myDivExpression__BehaviorDescriptor = new DivExpression__BehaviorDescriptor();
  private final BHDescriptor myBinaryComparisonExpression__BehaviorDescriptor = new BinaryComparisonExpression__BehaviorDescriptor();
  private final BHDescriptor myBinaryLogicalExpression__BehaviorDescriptor = new BinaryLogicalExpression__BehaviorDescriptor();
  private final BHDescriptor myLogicalOrExpression__BehaviorDescriptor = new LogicalOrExpression__BehaviorDescriptor();
  private final BHDescriptor myLogicalAndExpression__BehaviorDescriptor = new LogicalAndExpression__BehaviorDescriptor();
  private final BHDescriptor myBinaryEqualityExpression__BehaviorDescriptor = new BinaryEqualityExpression__BehaviorDescriptor();
  private final BHDescriptor myUnaryExpression__BehaviorDescriptor = new UnaryExpression__BehaviorDescriptor();
  private final BHDescriptor myLogicalNotExpression__BehaviorDescriptor = new LogicalNotExpression__BehaviorDescriptor();
  private final BHDescriptor myUnaryMinusExpression__BehaviorDescriptor = new UnaryMinusExpression__BehaviorDescriptor();
  private final BHDescriptor myParensExpression__BehaviorDescriptor = new ParensExpression__BehaviorDescriptor();
  private final BHDescriptor myINameQualifier__BehaviorDescriptor = new INameQualifier__BehaviorDescriptor();
  private final BHDescriptor myIProgramLocationProvider__BehaviorDescriptor = new IProgramLocationProvider__BehaviorDescriptor();
  private final BHDescriptor myProgramLocationOp__BehaviorDescriptor = new ProgramLocationOp__BehaviorDescriptor();
  private final BHDescriptor myInlineMessage__BehaviorDescriptor = new InlineMessage__BehaviorDescriptor();
  private final BHDescriptor myOperatorGroup__BehaviorDescriptor = new OperatorGroup__BehaviorDescriptor();
  private final BHDescriptor myOperatorTag__BehaviorDescriptor = new OperatorTag__BehaviorDescriptor();
  private final BHDescriptor myAndTag__BehaviorDescriptor = new AndTag__BehaviorDescriptor();
  private final BHDescriptor myPragmaExpression__BehaviorDescriptor = new PragmaExpression__BehaviorDescriptor();
  private final BHDescriptor myITypeable__BehaviorDescriptor = new ITypeable__BehaviorDescriptor();
  private final BHDescriptor myIValidOtherwiseContainer__BehaviorDescriptor = new IValidOtherwiseContainer__BehaviorDescriptor();
  private final BHDescriptor myColonCast__BehaviorDescriptor = new ColonCast__BehaviorDescriptor();
  private final BHDescriptor mySuccessExpression__BehaviorDescriptor = new SuccessExpression__BehaviorDescriptor();
  private final BHDescriptor myModExpression__BehaviorDescriptor = new ModExpression__BehaviorDescriptor();
  private final BHDescriptor myIOptionDerefContext__BehaviorDescriptor = new IOptionDerefContext__BehaviorDescriptor();
  private final BHDescriptor myAttemptType__BehaviorDescriptor = new AttemptType__BehaviorDescriptor();
  private final BHDescriptor myTryExpression__BehaviorDescriptor = new TryExpression__BehaviorDescriptor();
  private final BHDescriptor myIDocumentableWordProvider__BehaviorDescriptor = new IDocumentableWordProvider__BehaviorDescriptor();
  private final BHDescriptor myIDocumentableWordContainer__BehaviorDescriptor = new IDocumentableWordContainer__BehaviorDescriptor();
  private final BHDescriptor myISSConstrainedValue__BehaviorDescriptor = new ISSConstrainedValue__BehaviorDescriptor();
  private final BHDescriptor myISSConstrainedValueRef__BehaviorDescriptor = new ISSConstrainedValueRef__BehaviorDescriptor();
  private final BHDescriptor myITypeSupportsDefaultValue__BehaviorDescriptor = new ITypeSupportsDefaultValue__BehaviorDescriptor();
  private final BHDescriptor myDefaultValueExpression__BehaviorDescriptor = new DefaultValueExpression__BehaviorDescriptor();
  private final BHDescriptor myITyped__BehaviorDescriptor = new ITyped__BehaviorDescriptor();
  private final BHDescriptor myIOptionallyTyped__BehaviorDescriptor = new IOptionallyTyped__BehaviorDescriptor();
  private final BHDescriptor myEmptyExpression__BehaviorDescriptor = new EmptyExpression__BehaviorDescriptor();
  private final BHDescriptor myTryErrorClause__BehaviorDescriptor = new TryErrorClause__BehaviorDescriptor();
  private final BHDescriptor mySuccessValueExpr__BehaviorDescriptor = new SuccessValueExpr__BehaviorDescriptor();
  private final BHDescriptor myISSDelegatingType__BehaviorDescriptor = new ISSDelegatingType__BehaviorDescriptor();
  private final BHDescriptor myIContainmentStackMember__BehaviorDescriptor = new IContainmentStackMember__BehaviorDescriptor();
  private final BHDescriptor myIRef__BehaviorDescriptor = new IRef__BehaviorDescriptor();
  private final BHDescriptor myExpression__BehaviorDescriptor = new Expression__BehaviorDescriptor();
  private final BHDescriptor myType__BehaviorDescriptor = new Type__BehaviorDescriptor();
  private final BHDescriptor myIControlAdvancedFeatures_old__BehaviorDescriptor = new IControlAdvancedFeatures_old__BehaviorDescriptor();
  private final BHDescriptor myReferenceType__BehaviorDescriptor = new ReferenceType__BehaviorDescriptor();
  private final BHDescriptor myIReferenceableType__BehaviorDescriptor = new IReferenceableType__BehaviorDescriptor();
  private final BHDescriptor myMakeRefTarget__BehaviorDescriptor = new MakeRefTarget__BehaviorDescriptor();
  private final BHDescriptor myILiteral__BehaviorDescriptor = new ILiteral__BehaviorDescriptor();
  private final BHDescriptor myDeRefTarget__BehaviorDescriptor = new DeRefTarget__BehaviorDescriptor();
  private final BHDescriptor myIMayHaveEffect__BehaviorDescriptor = new IMayHaveEffect__BehaviorDescriptor();
  private final BHDescriptor myIfExpression__BehaviorDescriptor = new IfExpression__BehaviorDescriptor();
  private final BHDescriptor myAlternativesExpression__BehaviorDescriptor = new AlternativesExpression__BehaviorDescriptor();
  private final BHDescriptor myAltOption__BehaviorDescriptor = new AltOption__BehaviorDescriptor();
  private final BHDescriptor myOrTag__BehaviorDescriptor = new OrTag__BehaviorDescriptor();
  private final BHDescriptor myIReducableExpression__BehaviorDescriptor = new IReducableExpression__BehaviorDescriptor();
  private final BHDescriptor myTracerExpression__BehaviorDescriptor = new TracerExpression__BehaviorDescriptor();
  private final BHDescriptor myCheckTypeConstraintsExpr__BehaviorDescriptor = new CheckTypeConstraintsExpr__BehaviorDescriptor();
  private final BHDescriptor myOkTarget__BehaviorDescriptor = new OkTarget__BehaviorDescriptor();
  private final BHDescriptor myErrorTarget__BehaviorDescriptor = new ErrorTarget__BehaviorDescriptor();
  private final BHDescriptor myImplicitValidityValExpr__BehaviorDescriptor = new ImplicitValidityValExpr__BehaviorDescriptor();
  private final BHDescriptor myPrimitiveLiteral__BehaviorDescriptor = new PrimitiveLiteral__BehaviorDescriptor();
  private final BHDescriptor myLogicalIffExpression__BehaviorDescriptor = new LogicalIffExpression__BehaviorDescriptor();
  private final BHDescriptor myITraceRoot__BehaviorDescriptor = new ITraceRoot__BehaviorDescriptor();
  private final BHDescriptor myPlusTag__BehaviorDescriptor = new PlusTag__BehaviorDescriptor();
  private final BHDescriptor myMulTag__BehaviorDescriptor = new MulTag__BehaviorDescriptor();
  private final BHDescriptor myIParameterizedTypeSupportsEquals__BehaviorDescriptor = new IParameterizedTypeSupportsEquals__BehaviorDescriptor();
  private final BHDescriptor myDotExpression__BehaviorDescriptor = new DotExpression__BehaviorDescriptor();
  private final BHDescriptor myIDotTarget__BehaviorDescriptor = new IDotTarget__BehaviorDescriptor();
  private final BHDescriptor myJoinType__BehaviorDescriptor = new JoinType__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAltOption__BehaviorDescriptor;
      case 1:
        return myAlternativesExpression__BehaviorDescriptor;
      case 2:
        return myAndTag__BehaviorDescriptor;
      case 3:
        return myAssignmentExpr__BehaviorDescriptor;
      case 4:
        return myAttemptType__BehaviorDescriptor;
      case 5:
        return myBangOp__BehaviorDescriptor;
      case 6:
        return myBinaryComparisonExpression__BehaviorDescriptor;
      case 7:
        return myBinaryEqualityExpression__BehaviorDescriptor;
      case 8:
        return myBinaryExpression__BehaviorDescriptor;
      case 9:
        return myBinaryLogicalExpression__BehaviorDescriptor;
      case 10:
        return myCastExpression__BehaviorDescriptor;
      case 11:
        return myCheckTypeConstraintsExpr__BehaviorDescriptor;
      case 12:
        return myColonCast__BehaviorDescriptor;
      case 13:
        return myContract__BehaviorDescriptor;
      case 14:
        return myContractItem__BehaviorDescriptor;
      case 15:
        return myDeRefTarget__BehaviorDescriptor;
      case 16:
        return myDefaultValueExpression__BehaviorDescriptor;
      case 17:
        return myDivExpression__BehaviorDescriptor;
      case 18:
        return myDotExpression__BehaviorDescriptor;
      case 19:
        return myEmptyExpression__BehaviorDescriptor;
      case 20:
        return myEmptyValue__BehaviorDescriptor;
      case 21:
        return myErrorExpression__BehaviorDescriptor;
      case 22:
        return myErrorLiteral__BehaviorDescriptor;
      case 23:
        return myErrorTarget__BehaviorDescriptor;
      case 24:
        return myExpression__BehaviorDescriptor;
      case 25:
        return myFailExpr__BehaviorDescriptor;
      case 26:
        return myGenericErrorType__BehaviorDescriptor;
      case 27:
        return myHasValueOp__BehaviorDescriptor;
      case 28:
        return myIAllowDeletionOfDot__BehaviorDescriptor;
      case 29:
        return myIAllowDotOnLeft__BehaviorDescriptor;
      case 30:
        return myIAssertConstraints__BehaviorDescriptor;
      case 31:
        return myIAttemptType__BehaviorDescriptor;
      case 32:
        return myICanBeLValue__BehaviorDescriptor;
      case 33:
        return myIContainmentStackMember__BehaviorDescriptor;
      case 34:
        return myIContextAssistantTypeProvider__BehaviorDescriptor;
      case 35:
        return myIContextTypeProvider__BehaviorDescriptor;
      case 36:
        return myIContracted__BehaviorDescriptor;
      case 37:
        return myIControlAdvancedFeatures_old__BehaviorDescriptor;
      case 38:
        return myIDocumentableWordContainer__BehaviorDescriptor;
      case 39:
        return myIDocumentableWordProvider__BehaviorDescriptor;
      case 40:
        return myIDotTarget__BehaviorDescriptor;
      case 41:
        return myIHasBaseType__BehaviorDescriptor;
      case 42:
        return myIIsSingleSymbol__BehaviorDescriptor;
      case 43:
        return myILiteral__BehaviorDescriptor;
      case 44:
        return myIMainSlot__BehaviorDescriptor;
      case 45:
        return myIMayAllowEffect__BehaviorDescriptor;
      case 46:
        return myIMayHaveEffect__BehaviorDescriptor;
      case 47:
        return myIMayReadMutableState__BehaviorDescriptor;
      case 48:
        return myIMultiTraceRoot__BehaviorDescriptor;
      case 49:
        return myINameQualifier__BehaviorDescriptor;
      case 50:
        return myIOptionDerefContext__BehaviorDescriptor;
      case 51:
        return myIOptionallyTyped__BehaviorDescriptor;
      case 52:
        return myIParameterizedTypeSupportsEquals__BehaviorDescriptor;
      case 53:
        return myIProgramLocationProvider__BehaviorDescriptor;
      case 54:
        return myIProvidePathConstraints__BehaviorDescriptor;
      case 55:
        return myIReducableExpression__BehaviorDescriptor;
      case 56:
        return myIRef__BehaviorDescriptor;
      case 57:
        return myIReferenceableType__BehaviorDescriptor;
      case 58:
        return myIRunningInterpreterContext__BehaviorDescriptor;
      case 59:
        return myISSConstrainedValue__BehaviorDescriptor;
      case 60:
        return myISSConstrainedValueRef__BehaviorDescriptor;
      case 61:
        return myISSDelegatingType__BehaviorDescriptor;
      case 62:
        return myIScopeFilterer__BehaviorDescriptor;
      case 63:
        return myISingleSymbolRef__BehaviorDescriptor;
      case 64:
        return myITraceRoot__BehaviorDescriptor;
      case 65:
        return myITypeOverridingContext__BehaviorDescriptor;
      case 66:
        return myITypeSupportsDefaultValue__BehaviorDescriptor;
      case 67:
        return myITypeSupportsProposals__BehaviorDescriptor;
      case 68:
        return myITypeable__BehaviorDescriptor;
      case 69:
        return myITyped__BehaviorDescriptor;
      case 70:
        return myIValidOtherwiseContainer__BehaviorDescriptor;
      case 71:
        return myIfExpression__BehaviorDescriptor;
      case 72:
        return myImplicitValidityValExpr__BehaviorDescriptor;
      case 73:
        return myInlineMessage__BehaviorDescriptor;
      case 74:
        return myInvariant__BehaviorDescriptor;
      case 75:
        return myIsSomeExpression__BehaviorDescriptor;
      case 76:
        return myJoinType__BehaviorDescriptor;
      case 77:
        return myLogicalAndExpression__BehaviorDescriptor;
      case 78:
        return myLogicalIffExpression__BehaviorDescriptor;
      case 79:
        return myLogicalImpliesExpression__BehaviorDescriptor;
      case 80:
        return myLogicalNotExpression__BehaviorDescriptor;
      case 81:
        return myLogicalOrExpression__BehaviorDescriptor;
      case 82:
        return myMakeRefTarget__BehaviorDescriptor;
      case 83:
        return myMinusExpression__BehaviorDescriptor;
      case 84:
        return myModExpression__BehaviorDescriptor;
      case 85:
        return myMulExpression__BehaviorDescriptor;
      case 86:
        return myMulTag__BehaviorDescriptor;
      case 87:
        return myNoneLiteral__BehaviorDescriptor;
      case 88:
        return myOkTarget__BehaviorDescriptor;
      case 89:
        return myOneOfTarget__BehaviorDescriptor;
      case 90:
        return myOperatorGroup__BehaviorDescriptor;
      case 91:
        return myOperatorTag__BehaviorDescriptor;
      case 92:
        return myOptionOrExpression__BehaviorDescriptor;
      case 93:
        return myOptionType__BehaviorDescriptor;
      case 94:
        return myOrTag__BehaviorDescriptor;
      case 95:
        return myParensExpression__BehaviorDescriptor;
      case 96:
        return myPlainConstraint__BehaviorDescriptor;
      case 97:
        return myPlusExpression__BehaviorDescriptor;
      case 98:
        return myPlusTag__BehaviorDescriptor;
      case 99:
        return myPostcondition__BehaviorDescriptor;
      case 100:
        return myPragmaExpression__BehaviorDescriptor;
      case 101:
        return myPrecondition__BehaviorDescriptor;
      case 102:
        return myPrimitiveLiteral__BehaviorDescriptor;
      case 103:
        return myProgramLocationOp__BehaviorDescriptor;
      case 104:
        return myRangeTarget__BehaviorDescriptor;
      case 105:
        return myReferenceType__BehaviorDescriptor;
      case 106:
        return myRevealer__BehaviorDescriptor;
      case 107:
        return mySimpleExpressionValueInspector__BehaviorDescriptor;
      case 108:
        return mySomeValExpr__BehaviorDescriptor;
      case 109:
        return mySpecificErrorType__BehaviorDescriptor;
      case 110:
        return mySuccessExpression__BehaviorDescriptor;
      case 111:
        return mySuccessType__BehaviorDescriptor;
      case 112:
        return mySuccessValueExpr__BehaviorDescriptor;
      case 113:
        return myThisExpression__BehaviorDescriptor;
      case 114:
        return myTracerExpression__BehaviorDescriptor;
      case 115:
        return myTryErrorClause__BehaviorDescriptor;
      case 116:
        return myTryExpression__BehaviorDescriptor;
      case 117:
        return myTupleAccessExpr__BehaviorDescriptor;
      case 118:
        return myTupleType__BehaviorDescriptor;
      case 119:
        return myTupleValue__BehaviorDescriptor;
      case 120:
        return myType__BehaviorDescriptor;
      case 121:
        return myUnaryExpression__BehaviorDescriptor;
      case 122:
        return myUnaryMinusExpression__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6ea1ae96e110d65bL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6ea1ae96e110d644L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x4a147296d680d6a7L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2b547b5bcfa1bafL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x59f3fec4e777a2efL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x212b38c1011c3e9cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cb4f93L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cc6d99L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c99c15L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdbe7L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2d8b76405dcec884L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7211e500635b4b0bL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x52a5783d23e687ffL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff242212e561L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff242212e55cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cf47a6cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x60362815255f2e30L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cac63bL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f4249L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1d7438cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x35fb8ae75bfe7cc9L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1aa3923148b5e1f0L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1aa3923148a7eed6L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7211e500636a361dL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5b6b0ca1fd5e3baL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1aa3923148c47bcdL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x35fb8ae75bfd4263L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x45d6f895c8d2a52dL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x45d6f895c8b83417L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x10725209af7503e9L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1aa3923148c7518fL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2b547b5bcf93594L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x649a3edce7d544d9L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x954cdf0b62fb3cbL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x43d0987d9bc3829cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff242212e4a3L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x69e8e71b93a1b282L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5a9550a5f62013b8L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5a9550a5f5e95190L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f424aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x363cad8849174f6cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1bdab3d006f14c7L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cdaf784L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x241656660e75685L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xd373e3929e06954L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6c21639b50c5f96eL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x35d20fc48dec6791L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xf4b54f714ba06c9L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x488adb107e398e30L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x588e25ed5b40bd76L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1ab0b7cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7c29ed49aa581218L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x498a44b77aced6f6L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x3dabdba733bd8c80L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x704de22bfb63e034L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x66ecc7903939fab1L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cb9a0feL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x45fe014ac8835911L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5b310c0a1acbbabbL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5b310c0a1acbbabcL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x626f78ee82fe21a5L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x3523822eb4700a4aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x3523822eb470014aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x760b48e4e8448dc2L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x521b6644acb5b47L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x60362815255ee08fL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x954cdf0b5f6ee74L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x4f3180ef560f8ee0L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x622163b5c76a6c48L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x50ccd0fa593272c9L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6cef3d81a56f626aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7211e500642440d1L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x498a44b77b9aa812L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff242212e5edL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81cac5800L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7edef95a36fc3555L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdd39L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x753e449f1c7cd7bcL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x15035178cd135185L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cd0f6aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cbdcbbL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cc7d24bL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cac5a5L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x53e292c5b9d6ff5aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c9a56fL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x76cdcb8c5573ff6fL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81cae2cf5L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7211e50063654b25L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2e85d8007a529cb6L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x4a147296d680c07bL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x4a147296d680c07cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x3523822eb4da44aaL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81ca93310L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6f1c76e8c8b0c30dL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86d2f11fL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff2422571594L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86c9a4f2L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x76cdcb8c55662b4eL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff242212e5ecL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x4d521af227ea4d32L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xc0aff242212e55dL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x744a56d3ba8dc333L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x498a44b77ade190cL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1f284427516350b0L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cb8fcfcL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x447c2333802f6f96L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x278f63fdaec2d699L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xeb308f771ea15b3L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1aa3923148c47becL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x52ea52e64e450e9aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x1aa3923148c47a94L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1f940d6L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x43d0987d9bc38737L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x704de22bfb6bfe0eL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x62632b96c1ec83cbL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x59f3fec4e77fb428L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x23141f44f4c5014aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xe247742183174baL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xe2477421831765aL), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a614L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cd0f69L), MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cdddbbL)).seal();
}
