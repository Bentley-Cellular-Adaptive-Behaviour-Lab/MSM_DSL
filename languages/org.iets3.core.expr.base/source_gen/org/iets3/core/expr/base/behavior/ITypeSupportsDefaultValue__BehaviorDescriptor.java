package org.iets3.core.expr.base.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public final class ITypeSupportsDefaultValue__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x60362815255ee08fL, "org.iets3.core.expr.base.structure.ITypeSupportsDefaultValue");

  public static final SMethod<Boolean> supportsDefault_id60Qa1k_sqM4 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("supportsDefault").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("60Qa1k_sqM4").build();
  public static final SMethod<SNode> createDefaultVarExpr_id60Qa1k_nI2O = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("createDefaultVarExpr").modifiers(SModifiersImpl.create(12, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("60Qa1k_nI2O").build();
  public static final SMethod<Boolean> deriveSupportFrom_id60Qa1k_t_KP = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("deriveSupportFrom").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("60Qa1k_t_KP").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<SNode> deriveValueFrom_id60Qa1k_tB0C = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("deriveValueFrom").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("60Qa1k_tB0C").build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(supportsDefault_id60Qa1k_sqM4, createDefaultVarExpr_id60Qa1k_nI2O, deriveSupportFrom_id60Qa1k_t_KP, deriveValueFrom_id60Qa1k_tB0C);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static boolean supportsDefault_id60Qa1k_sqM4(@NotNull SNode __thisNode__) {
    return true;
  }
  /*package*/ static boolean deriveSupportFrom_id60Qa1k_t_KP(@NotNull SNode __thisNode__, SNode type) {
    if (type == null) {
      return false;
    }
    if (SNodeOperations.isInstanceOf(type, CONCEPTS.ITypeSupportsDefaultValue$Ly)) {
      return (boolean) ITypeSupportsDefaultValue__BehaviorDescriptor.supportsDefault_id60Qa1k_sqM4.invoke(SNodeOperations.cast(type, CONCEPTS.ITypeSupportsDefaultValue$Ly));
    }
    return false;
  }
  /*package*/ static SNode deriveValueFrom_id60Qa1k_tB0C(@NotNull SNode __thisNode__, SNode type) {
    if (type == null) {
      return null;
    }
    if (SNodeOperations.isInstanceOf(type, CONCEPTS.ITypeSupportsDefaultValue$Ly)) {
      return ITypeSupportsDefaultValue__BehaviorDescriptor.createDefaultVarExpr_id60Qa1k_nI2O.invoke(SNodeOperations.cast(type, CONCEPTS.ITypeSupportsDefaultValue$Ly));
    }
    return null;
  }

  /*package*/ ITypeSupportsDefaultValue__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Boolean) supportsDefault_id60Qa1k_sqM4(node));
      case 2:
        return (T) ((Boolean) deriveSupportFrom_id60Qa1k_t_KP(node, (SNode) parameters[0]));
      case 3:
        return (T) ((SNode) deriveValueFrom_id60Qa1k_tB0C(node, (SNode) parameters[0]));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept ITypeSupportsDefaultValue$Ly = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x60362815255ee08fL, "org.iets3.core.expr.base.structure.ITypeSupportsDefaultValue");
  }
}
