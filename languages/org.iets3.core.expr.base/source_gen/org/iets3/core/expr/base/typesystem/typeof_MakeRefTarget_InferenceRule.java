package org.iets3.core.expr.base.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import org.iets3.core.expr.base.behavior.IDotTarget__BehaviorDescriptor;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.builder.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class typeof_MakeRefTarget_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_MakeRefTarget_InferenceRule() {
  }
  public void applyRule(final SNode mrt, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      final SNode ctxType = typeCheckingContext.typeOf(IDotTarget__BehaviorDescriptor.contextExpression_id6zmBjqUivyF.invoke(mrt), "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7782108600709620477", true);
      typeCheckingContext.whenConcrete(ctxType, new Runnable() {
        public void run() {
          {
            SNode _nodeToCheck_1029348928467 = mrt;
            EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7782108600709617335", 0, null);
            typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7782108600709616055", true), (SNode) createReferenceType_hkg327_a1a0c0a0a0a1a0b0a0b(SNodeOperations.cast(SNodeOperations.copyNode(typeCheckingContext.getExpandedNode(ctxType)), CONCEPTS.Type$WK)), _info_12389875345);
          }
        }
      }, "r:80cf2246-750c-4158-9056-a619ebcf894c(org.iets3.core.expr.base.typesystem)", "7782108600709620019", false, false);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.MakeRefTarget$Fv;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
  private static SNode createReferenceType_hkg327_a1a0c0a0a0a1a0b0a0b(SNode p0) {
    SNodeBuilder n0 = new SNodeBuilder().init(CONCEPTS.ReferenceType$sW);
    n0.forChild(LINKS.baseType$M6Aa).initNode(p0, CONCEPTS.Type$WK, true);
    return n0.getResult();
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Type$WK = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a614L, "org.iets3.core.expr.base.structure.Type");
    /*package*/ static final SConcept MakeRefTarget$Fv = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cc7d24bL, "org.iets3.core.expr.base.structure.MakeRefTarget");
    /*package*/ static final SConcept ReferenceType$sW = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cb8fcfcL, "org.iets3.core.expr.base.structure.ReferenceType");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink baseType$M6Aa = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6bff9a8a7cb8fcfcL, 0x6bff9a8a7cb8fcfdL, "baseType");
  }
}
