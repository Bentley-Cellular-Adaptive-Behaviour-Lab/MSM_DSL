package org.iets3.core.expr.base.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeChild;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.iets3.core.base.behavior.IControlAdvancedFeatures__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public class SuccessExpression_Constraints extends BaseConstraintsDescriptor {
  public SuccessExpression_Constraints() {
    super(CONCEPTS.SuccessExpression$f8);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeChild, Boolean> calculateCanBeChildConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeChild, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeChild context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAChild(context.getNode(), context.getParentNode(), context.getConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAChild(SNode node, SNode parentNode, SAbstractConcept childConcept, SContainmentLink link) {
    return (boolean) IControlAdvancedFeatures__BehaviorDescriptor.areAttemptsAllowed_id4FREEt6zM91.invoke(SNodeOperations.asSConcept(CONCEPTS.IControlAdvancedFeatures$AH), parentNode);
  }
  private static final SNodePointer canBeChildBreakingPoint = new SNodePointer("r:9750d418-880f-460d-9880-d67dd111722d(org.iets3.core.expr.base.constraints)", "5974679004769489364");

  private static final class CONCEPTS {
    /*package*/ static final SConcept SuccessExpression$f8 = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x52ea52e64e450e9aL, "org.iets3.core.expr.base.structure.SuccessExpression");
    /*package*/ static final SInterfaceConcept IControlAdvancedFeatures$AH = MetaAdapterFactory.getInterfaceConcept(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x69e8e71b93a1b282L, "org.iets3.core.base.structure.IControlAdvancedFeatures");
  }
}
