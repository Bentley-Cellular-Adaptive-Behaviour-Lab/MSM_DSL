package org.iets3.core.expr.base.plugin;

/*Generated by MPS */

import com.mbeddr.mpsutil.interpreter.rt.InterpreterEscapeException;
import org.jetbrains.mps.openapi.model.SNode;
import com.mbeddr.mpsutil.interpreter.rt.IContext;
import com.mbeddr.mpsutil.interpreter.rt.ComputationTrace;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ide.httpsupport.runtime.base.HttpSupportUtil;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;

public class ConstraintFailedException extends InterpreterEscapeException {

  public static final String PLAIN = "PLAIN";
  public static final String PRE = "PRE";
  public static final String POST = "POST";
  public static final String INV = "INV";

  public final String kind;
  public final String failedCondition;

  public Object valueThatCausesProblem;

  public boolean failedBecauseOf(String kind) {
    return this.kind.equals(kind);
  }

  public ConstraintFailedException(String kind, Object valueThatCausesProblem, SNode nodeWithError, Object msg, IContext context, ComputationTrace trace) {
    super(nodeWithError, msg, (SNodeOperations.getModel(nodeWithError) != null ? HttpSupportUtil.getURL(nodeWithError) : "<node not in model>"), context, trace);
    this.failedCondition = BaseConcept__BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(nodeWithError);
    this.kind = kind;
    this.valueThatCausesProblem = valueThatCausesProblem;
  }

  public Object causingValue() {
    return this.valueThatCausesProblem;
  }

}
