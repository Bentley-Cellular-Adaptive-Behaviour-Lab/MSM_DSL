package org.iets3.core.expr.base.plugin;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.smodel.structure.ExtensionPoint;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.ISelector;

public abstract class NC {

  private static List<NameCompletionProvider> providers = null;

  public static List<NameCompletionProvider> resolveProviders() {
    if (providers == null) {
      ExtensionPoint<NameCompletionProvider> ep = new ExtensionPoint<NameCompletionProvider>("org.iets3.core.expr.base.nameCompletionProvider");
      providers = Sequence.fromIterable(ep.getObjects()).ofType(NameCompletionProvider.class).toListSequence();
    }
    return providers;
  }

  public static List<String> proposals(final SNode node, final String prefix) {
    return ListSequence.fromList(resolveProviders()).translate(new ITranslator2<NameCompletionProvider, String>() {
      public Iterable<String> translate(NameCompletionProvider it) {
        return it.proposals(node, prefix);
      }
    }).sort(new ISelector<String, String>() {
      public String select(String it) {
        return it;
      }
    }, true).toListSequence();
  }

}
