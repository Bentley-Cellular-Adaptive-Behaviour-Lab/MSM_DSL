package org.iets3.core.expr.base.migration;

/*Generated by MPS */

import jetbrains.mps.lang.migration.runtime.base.MigrationScriptBase;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import org.jetbrains.mps.openapi.module.SearchScope;
import jetbrains.mps.lang.smodel.query.runtime.CommandUtil;
import jetbrains.mps.project.EditableFilteringScope;
import jetbrains.mps.lang.smodel.query.runtime.QueryExecutionContext;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.migration.runtime.base.RefactoringRuntime;
import jetbrains.mps.lang.migration.runtime.base.Problem;
import jetbrains.mps.internal.collections.runtime.ISequenceClosure;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.lang.migration.runtime.base.DeprecatedConceptNotMigratedProblem;
import jetbrains.mps.lang.migration.runtime.base.MigrationScriptReference;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class MigrationScript_1 extends MigrationScriptBase {
  private final String description = "Automatic migration: move node `IControlAdvancedFeatures`";
  public String getCaption() {
    return description;
  }
  @Override
  public boolean isRerunnable() {
    return true;
  }
  public SNode execute(final SModule m) {
    doExecute(m);
    return null;
  }
  public void doExecute(final SModule m) {
    {
      SearchScope scope_zc5nt1_a0e = CommandUtil.createScope(m);
      final SearchScope scope_zc5nt1_a0e_0 = new EditableFilteringScope(scope_zc5nt1_a0e);
      QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_zc5nt1_a0e_0;
        }
      };
      Sequence.fromIterable(CommandUtil.nodes(CommandUtil.selectScope(null, context))).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(it)), SNodeOperations.asSConcept(MetaAdapterFactory.getInterfaceConcept(MetaAdapterFactory.getLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base"), 0x69e8e71b93a1b282L, "IControlAdvancedFeatures")));
        }
      }).visitAll(new IVisitor<SNode>() {
        public void visit(SNode node) {
          RefactoringRuntime.replaceWithNewConcept(node, MetaAdapterFactory.getInterfaceConcept(MetaAdapterFactory.getLanguage(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, "org.iets3.core.base"), 0x69e8e71b93a1b282L, "IControlAdvancedFeatures"));
        }
      });
    }
  }
  @Override
  public Iterable<Problem> check(SModule m) {
    {
      SearchScope scope_zc5nt1_a0f = CommandUtil.createScope(m);
      final SearchScope scope_zc5nt1_a0f_0 = new EditableFilteringScope(scope_zc5nt1_a0f);
      final QueryExecutionContext context = new QueryExecutionContext() {
        public SearchScope getDefaultSearchScope() {
          return scope_zc5nt1_a0f_0;
        }
      };
      return Sequence.fromClosure(new ISequenceClosure<Problem>() {
        public Iterable<Problem> iterable() {
          return Sequence.fromIterable(CommandUtil.nodes(CommandUtil.selectScope(null, context))).where(new IWhereFilter<SNode>() {
            public boolean accept(SNode it) {
              return SNodeOperations.isInstanceOf(it, SNodeOperations.asSConcept(MetaAdapterFactory.getInterfaceConcept(MetaAdapterFactory.getLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base"), 0x69e8e71b93a1b282L, "IControlAdvancedFeatures"))) && !(SNodeOperations.isInstanceOf(it, SNodeOperations.asSConcept(MetaAdapterFactory.getInterfaceConcept(MetaAdapterFactory.getLanguage(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, "org.iets3.core.base"), 0x69e8e71b93a1b282L, "IControlAdvancedFeatures"))));
            }
          }).select(new ISelector<SNode, Problem>() {
            public Problem select(SNode it) {
              Problem problem = new DeprecatedConceptNotMigratedProblem(it);
              return problem;
            }
          });
        }
      });
    }
  }
  public MigrationScriptReference getDescriptor() {
    return new MigrationScriptReference(MetaAdapterFactory.getLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base"), 1);
  }
  public static boolean isMovedConcept(SAbstractConcept c) {
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(c), SNodeOperations.asSConcept(MetaAdapterFactory.getInterfaceConcept(MetaAdapterFactory.getLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base"), 0x69e8e71b93a1b282L, "IControlAdvancedFeatures")))) {
      return true;
    }
    return false;
  }
}
