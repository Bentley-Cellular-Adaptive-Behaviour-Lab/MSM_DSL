package org.iets3.core.expr.base.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.iets3.core.expr.base.plugin.EffectDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.core.behavior.BaseConcept__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typechecking.TypecheckingFacade;
import com.mbeddr.mpsutil.interpreter.behavior.IInterpreterWrapperType__BehaviorDescriptor;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;

public final class DotExpression__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f4249L, "org.iets3.core.expr.base.structure.DotExpression");

  public static final SMethod<Integer> priority_id4rZeNQ6Nh_5 = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("priority").modifiers(SModifiersImpl.create(9, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4rZeNQ6Nh_5").build();
  public static final SMethod<String> renderReadable_id4Y0vh0cfqjE = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("renderReadable").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("4Y0vh0cfqjE").build();
  public static final SMethod<String> getPresentation_idhEwIMiw = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getPresentation").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("hEwIMiw").build();
  public static final SMethod<EffectDescriptor> effectDescriptor_id6GySMNjjWfO = new SMethodBuilder<EffectDescriptor>(new SJavaCompoundTypeImpl(EffectDescriptor.class)).name("effectDescriptor").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("6GySMNjjWfO").build();
  public static final SMethod<SNode> innermostExpression_id1o3PqYGf0HI = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("innermostExpression").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("1o3PqYGf0HI").build();
  public static final SMethod<Boolean> expectType_id5WNmJ7DokMG = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("expectType").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5WNmJ7DokMG").build(SMethodBuilder.createJavaParameter((Class<SAbstractConcept>) ((Class) Object.class), ""), SMethodBuilder.createJavaParameter(Boolean.TYPE, ""));
  public static final SMethod<SNode> extractContextBaseType_id5WNmJ7Ez2mW = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("extractContextBaseType").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5WNmJ7Ez2mW").build();
  public static final SMethod<List<SNode>> additionallyShownNodes_id5Beavy19lGt = new SMethodBuilder<List<SNode>>(new SJavaCompoundTypeImpl((Class<List<SNode>>) ((Class) Object.class))).name("additionallyShownNodes").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5Beavy19lGt").build();
  public static final SMethod<Boolean> isLValue_idaPhVmWYjn5 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isLValue").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("aPhVmWYjn5").build();
  public static final SMethod<Boolean> isUsedAsLValue_idYMJl2BJIOO = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("isUsedAsLValue").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("YMJl2BJIOO").build();
  public static final SMethod<Boolean> shouldBeSubstituted_id14gxgpJfXC0 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("shouldBeSubstituted").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("14gxgpJfXC0").build();
  public static final SMethod<SNode> getISSVariable_id5GL30CqMVFo = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("getISSVariable").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5GL30CqMVFo").build();

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(priority_id4rZeNQ6Nh_5, renderReadable_id4Y0vh0cfqjE, getPresentation_idhEwIMiw, effectDescriptor_id6GySMNjjWfO, innermostExpression_id1o3PqYGf0HI, expectType_id5WNmJ7DokMG, extractContextBaseType_id5WNmJ7Ez2mW, additionallyShownNodes_id5Beavy19lGt, isLValue_idaPhVmWYjn5, isUsedAsLValue_idYMJl2BJIOO, shouldBeSubstituted_id14gxgpJfXC0, getISSVariable_id5GL30CqMVFo);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static int priority_id4rZeNQ6Nh_5(@NotNull SAbstractConcept __thisConcept__) {
    return 30000;
  }
  /*package*/ static String renderReadable_id4Y0vh0cfqjE(@NotNull SNode __thisNode__) {
    return BaseConcept__BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(__thisNode__);
  }
  /*package*/ static String getPresentation_idhEwIMiw(@NotNull SNode __thisNode__) {
    final SNode target = SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F);
    if (target != null) {
      return Expression__BehaviorDescriptor.renderReadable_id4Y0vh0cfqjE.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0)) + "." + ((SNodeOperations.getConcept(target).isAbstract() ? "" : IDotTarget__BehaviorDescriptor.renderReadable_id6kR0qIbI2yi.invoke(target)));
    } else {
      return Expression__BehaviorDescriptor.renderReadable_id4Y0vh0cfqjE.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0));
    }
  }
  /*package*/ static EffectDescriptor effectDescriptor_id6GySMNjjWfO(@NotNull SNode __thisNode__) {
    return EffectDescriptor.forNodes(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0), SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F));
  }
  /*package*/ static SNode innermostExpression_id1o3PqYGf0HI(@NotNull SNode __thisNode__) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0), CONCEPTS.DotExpression$jp)) {
      return DotExpression__BehaviorDescriptor.innermostExpression_id1o3PqYGf0HI.invoke(SNodeOperations.cast(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0), CONCEPTS.DotExpression$jp));
    }
    return SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0);
  }
  /*package*/ static boolean expectType_id5WNmJ7DokMG(@NotNull SNode __thisNode__, SAbstractConcept cc, boolean transparentWrappedTypes) {
    SNode tt = TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0));
    if (SNodeOperations.isInstanceOf(tt, SNodeOperations.asSConcept(cc))) {
      return true;
    }
    if (transparentWrappedTypes && SNodeOperations.isInstanceOf(tt, CONCEPTS.IInterpreterWrapperType$KD)) {
      SNode ot = SNodeOperations.cast(tt, CONCEPTS.IInterpreterWrapperType$KD);
      return SNodeOperations.isInstanceOf(IInterpreterWrapperType__BehaviorDescriptor.wrappedType_id6bG6MAFRDvi.invoke(ot), SNodeOperations.asSConcept(cc));
    }
    return false;
  }
  /*package*/ static SNode extractContextBaseType_id5WNmJ7Ez2mW(@NotNull SNode __thisNode__) {
    SNode tt = TypecheckingFacade.getFromContext().getTypeOf(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0));
    if (SNodeOperations.isInstanceOf(tt, CONCEPTS.OptionType$eU)) {
      return SLinkOperations.getTarget(SNodeOperations.cast(tt, CONCEPTS.OptionType$eU), LINKS.baseType$Cv_a);
    }
    if (SNodeOperations.isInstanceOf(tt, CONCEPTS.ICollectionType$Cs)) {
      return IHasBaseType__BehaviorDescriptor.getBaseType_id3oWFox95OZf.invoke(SNodeOperations.cast(tt, CONCEPTS.ICollectionType$Cs));
    }
    return SNodeOperations.as(tt, CONCEPTS.Type$WK);
  }
  /*package*/ static List<SNode> additionallyShownNodes_id5Beavy19lGt(@NotNull SNode __thisNode__) {
    List<SNode> nodes = new ArrayList<SNode>();
    ListSequence.fromList(nodes).addElement(SLinkOperations.getTarget(__thisNode__, LINKS.expr$Hji0));
    return nodes;
  }
  /*package*/ static boolean isLValue_idaPhVmWYjn5(@NotNull SNode __thisNode__) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F), CONCEPTS.ICanBeLValue$lB)) {
      return (boolean) ICanBeLValue__BehaviorDescriptor.isLValue_idaPhVmWYjn5.invoke(SNodeOperations.cast(SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F), CONCEPTS.ICanBeLValue$lB));
    } else {
      return false;
    }
  }
  /*package*/ static boolean isUsedAsLValue_idYMJl2BJIOO(@NotNull SNode __thisNode__) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F), CONCEPTS.ICanBeLValue$lB)) {
      return (boolean) ICanBeLValue__BehaviorDescriptor.isUsedAsLValue_idYMJl2BJIOO.invoke(SNodeOperations.cast(SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F), CONCEPTS.ICanBeLValue$lB));
    } else {
      return false;
    }
  }
  /*package*/ static boolean shouldBeSubstituted_id14gxgpJfXC0(@NotNull SNode __thisNode__) {
    return (boolean) IDotTarget__BehaviorDescriptor.shouldDotExpressionBeSubstitutedAsConstrainedValue_id74u6qanLBRj.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F));
  }
  /*package*/ static SNode getISSVariable_id5GL30CqMVFo(@NotNull SNode __thisNode__) {
    return (SNode) IDotTarget__BehaviorDescriptor.getISSVariable_id74u6qanSXND.invoke(SLinkOperations.getTarget(__thisNode__, LINKS.target$u23F));
  }

  /*package*/ DotExpression__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 1:
        return (T) ((String) renderReadable_id4Y0vh0cfqjE(node));
      case 2:
        return (T) ((String) getPresentation_idhEwIMiw(node));
      case 3:
        return (T) ((EffectDescriptor) effectDescriptor_id6GySMNjjWfO(node));
      case 4:
        return (T) ((SNode) innermostExpression_id1o3PqYGf0HI(node));
      case 5:
        return (T) ((Boolean) expectType_id5WNmJ7DokMG(node, (SAbstractConcept) parameters[0], ((boolean) (Boolean) parameters[1])));
      case 6:
        return (T) ((SNode) extractContextBaseType_id5WNmJ7Ez2mW(node));
      case 7:
        return (T) ((List<SNode>) additionallyShownNodes_id5Beavy19lGt(node));
      case 8:
        return (T) ((Boolean) isLValue_idaPhVmWYjn5(node));
      case 9:
        return (T) ((Boolean) isUsedAsLValue_idYMJl2BJIOO(node));
      case 10:
        return (T) ((Boolean) shouldBeSubstituted_id14gxgpJfXC0(node));
      case 11:
        return (T) ((SNode) getISSVariable_id5GL30CqMVFo(node));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Integer) priority_id4rZeNQ6Nh_5(concept));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink target$u23F = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f4249L, 0x7cef88020a0f424bL, "target");
    /*package*/ static final SContainmentLink expr$Hji0 = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x46ff3b3d86cd0f69L, 0x46ff3b3d86cd0f6bL, "expr");
    /*package*/ static final SContainmentLink baseType$Cv_a = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81ca93310L, 0x26f4f2a81ca93311L, "baseType");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept DotExpression$jp = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f4249L, "org.iets3.core.expr.base.structure.DotExpression");
    /*package*/ static final SInterfaceConcept IInterpreterWrapperType$KD = MetaAdapterFactory.getInterfaceConcept(0x47f075a6558e4640L, 0xa6067ce0236c8023L, 0x62ec1b29abde62acL, "com.mbeddr.mpsutil.interpreter.structure.IInterpreterWrapperType");
    /*package*/ static final SConcept OptionType$eU = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81ca93310L, "org.iets3.core.expr.base.structure.OptionType");
    /*package*/ static final SInterfaceConcept ICollectionType$Cs = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x5f335af1e96375a1L, "org.iets3.core.expr.base.structure.ICollectionType");
    /*package*/ static final SConcept Type$WK = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a614L, "org.iets3.core.expr.base.structure.Type");
    /*package*/ static final SInterfaceConcept ICanBeLValue$lB = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x2b547b5bcf93594L, "org.iets3.core.expr.base.structure.ICanBeLValue");
  }
}
