package org.iets3.core.expr.base.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import org.iets3.core.base.behavior.IControlAdvancedFeatures__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typechecking.TypecheckingFacade;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public final class wrapWithIfSome_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public wrapWithIfSome_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:7d06857c-251f-4454-ac9c-c398e5200a04(org.iets3.core.expr.base.intentions)", "302090658877566498"));
  }
  @Override
  public String getPresentation() {
    return "wrapWithIfSome";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    if (!((boolean) IControlAdvancedFeatures__BehaviorDescriptor.areOptionsAllowed_id4FREEt6zKrJ.invoke(SNodeOperations.asSConcept(CONCEPTS.IControlAdvancedFeatures$AH), node))) {
      return false;
    }
    return SNodeOperations.isInstanceOf(TypecheckingFacade.getFromContext().getTypeOf(node), CONCEPTS.OptionType$eU);
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Wrap with if [some(..) ..]";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      SNode ife = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6cef3d81a56f626aL, "org.iets3.core.expr.base.structure.IfExpression"));
      SNode someQuery = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81cac5800L, "org.iets3.core.expr.base.structure.IsSomeExpression"));
      SLinkOperations.setTarget(someQuery, LINKS.expr$abfa, SNodeOperations.copyNode(node));
      SNode someVal = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xeb308f771ea15b3L, "org.iets3.core.expr.base.structure.SomeValExpr"));
      SLinkOperations.setTarget(ife, LINKS.condition$bVqa, someQuery);
      SLinkOperations.setTarget(ife, LINKS.thenPart$bVSc, someVal);
      SLinkOperations.setTarget(someVal, LINKS.someQuery$VNBE, someQuery);
      SNodeOperations.replaceWithAnother(node, ife);
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return wrapWithIfSome_Intention.this;
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IControlAdvancedFeatures$AH = MetaAdapterFactory.getInterfaceConcept(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x69e8e71b93a1b282L, "org.iets3.core.base.structure.IControlAdvancedFeatures");
    /*package*/ static final SConcept OptionType$eU = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81ca93310L, "org.iets3.core.expr.base.structure.OptionType");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink expr$abfa = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x26f4f2a81cac5800L, 0x26f4f2a81cac5801L, "expr");
    /*package*/ static final SContainmentLink condition$bVqa = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6cef3d81a56f626aL, 0x6cef3d81a56f626bL, "condition");
    /*package*/ static final SContainmentLink thenPart$bVSc = MetaAdapterFactory.getContainmentLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x6cef3d81a56f626aL, 0x6cef3d81a56f626dL, "thenPart");
    /*package*/ static final SReferenceLink someQuery$VNBE = MetaAdapterFactory.getReferenceLink(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0xeb308f771ea15b3L, 0xeb308f771ea15b4L, "someQuery");
  }
}
