package org.iets3.core.expr.base.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.iets3.core.base.behavior.IControlAdvancedFeatures__BehaviorDescriptor;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public final class IntroduceReveal_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public IntroduceReveal_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:7d06857c-251f-4454-ac9c-c398e5200a04(org.iets3.core.expr.base.intentions)", "4934857995792118313"));
  }
  @Override
  public String getPresentation() {
    return "IntroduceReveal";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    SNode controllRoot = SNodeOperations.as(SNodeOperations.getContainingRoot(node), CONCEPTS.IControlAdvancedFeatures$AH);
    if ((controllRoot != null)) {
      return (boolean) IControlAdvancedFeatures__BehaviorDescriptor.allowReveal_idk9boAtHuqo.invoke(controllRoot);
    } else {
      // this is an annotation that is processed by the interpreter. it only makes sense on elements that are handled by 
      // the interpreter. Otherwise we show this intention too often 
      if (SNodeOperations.isInstanceOf(node, CONCEPTS.Expression$D_) || SNodeOperations.isInstanceOf(node, CONCEPTS.IDotTarget$jS)) {
        return true;
      }
    }
    return false;
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "DEBUGGING: " + ("Introduce REVEAL");
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      AttributeOperations.createAndSetAttrbiute(node, new IAttributeDescriptor.NodeAttribute(CONCEPTS.Revealer$WY), CONCEPTS.Revealer$WY);
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return IntroduceReveal_Intention.this;
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SInterfaceConcept IControlAdvancedFeatures$AH = MetaAdapterFactory.getInterfaceConcept(0x7b68d745a7b848b9L, 0xbd9c05c0f8725a35L, 0x69e8e71b93a1b282L, "org.iets3.core.base.structure.IControlAdvancedFeatures");
    /*package*/ static final SInterfaceConcept IDotTarget$jS = MetaAdapterFactory.getInterfaceConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x7cef88020a0f424aL, "org.iets3.core.expr.base.structure.IDotTarget");
    /*package*/ static final SConcept Expression$D_ = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L, "org.iets3.core.expr.base.structure.Expression");
    /*package*/ static final SConcept Revealer$WY = MetaAdapterFactory.getConcept(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x447c2333802f6f96L, "org.iets3.core.expr.base.structure.Revealer");
  }
}
