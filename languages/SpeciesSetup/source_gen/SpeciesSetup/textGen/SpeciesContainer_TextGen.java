package SpeciesSetup.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SProperty;

public class SpeciesContainer_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    SNode tissueContainer = SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.Tissue_Container$Ds8T);

    tgs.append("#include \"ODE.h\"\n\n");

    tgs.append("ODEs::ODEs(){};\n\n");

    tgs.append("void ODEs::check_ODEs(std::string cell_name, MemAgent *memAgent){\n");
    for (SNode cellType : ListSequence.fromList(SLinkOperations.getChildren(tissueContainer, LINKS.cell_types$$$44))) {
      tgs.append("\tif (cell_name == ");
      tgs.append(SPropertyOperations.getString(cellType, PROPS.name$MnvL));
      tgs.append(") {\n");
      tgs.append("\t\t");
      tgs.append(SPropertyOperations.getString(cellType, PROPS.name$MnvL));
      tgs.append("_run_ODEs(memAgent);\n");
    }
    tgs.append("}\n");

    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.ODESystem$8SW4));

    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.RateFunctions$j1E));
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink Tissue_Container$Ds8T = MetaAdapterFactory.getReferenceLink(0x84970ad9a9644f15L, 0xa393dc0fcd724c0fL, 0x2b6159d0ceecf4ebL, 0x6f82e96f79a54de4L, "Tissue_Container");
    /*package*/ static final SContainmentLink cell_types$$$44 = MetaAdapterFactory.getContainmentLink(0xb1ff4d68a5194928L, 0x8e36de776040fb5aL, 0x56b8f8b9a96cef85L, 0x4369a03b1c6088edL, "cell_types");
    /*package*/ static final SContainmentLink ODESystem$8SW4 = MetaAdapterFactory.getContainmentLink(0x84970ad9a9644f15L, 0xa393dc0fcd724c0fL, 0x2b6159d0ceecf4ebL, 0x2039193afafc5a6fL, "ODESystem");
    /*package*/ static final SContainmentLink RateFunctions$j1E = MetaAdapterFactory.getContainmentLink(0x84970ad9a9644f15L, 0xa393dc0fcd724c0fL, 0x2b6159d0ceecf4ebL, 0x2039193afb119ea4L, "RateFunctions");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }
}
