package SpeciesSetup.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor mySpecies_Container__BehaviorDescriptor = new Species_Container__BehaviorDescriptor();
  private final BHDescriptor mySpecies__BehaviorDescriptor = new Species__BehaviorDescriptor();
  private final BHDescriptor myReaction__BehaviorDescriptor = new Reaction__BehaviorDescriptor();
  private final BHDescriptor myParameter__BehaviorDescriptor = new Parameter__BehaviorDescriptor();
  private final BHDescriptor myPower__BehaviorDescriptor = new Power__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myParameter__BehaviorDescriptor;
      case 1:
        return myPower__BehaviorDescriptor;
      case 2:
        return myReaction__BehaviorDescriptor;
      case 3:
        return mySpecies__BehaviorDescriptor;
      case 4:
        return mySpecies_Container__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a35L), MetaIdFactory.conceptId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x53941380e02cdd12L), MetaIdFactory.conceptId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510cL), MetaIdFactory.conceptId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510bL), MetaIdFactory.conceptId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510aL)).seal();
}
