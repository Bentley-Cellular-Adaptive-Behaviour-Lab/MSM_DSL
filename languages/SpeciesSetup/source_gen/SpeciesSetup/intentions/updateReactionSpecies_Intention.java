package SpeciesSetup.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import SpeciesSetup.behavior.Species_Container__BehaviorDescriptor;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;

public final class updateReactionSpecies_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public updateReactionSpecies_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:73ee04c1-cc62-4edc-8cdb-052d3df6f85a(SpeciesSetup.intentions)", "8710455521505844205"));
  }
  @Override
  public String getPresentation() {
    return "updateReactionSpecies";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    return true;
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "UpdateRelations";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      Species_Container__BehaviorDescriptor.updateRelations_id1zpgvgJENiV.invoke(node);
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return updateReactionSpecies_Intention.this;
    }
  }
}
