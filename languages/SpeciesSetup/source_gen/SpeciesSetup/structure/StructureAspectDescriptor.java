package SpeciesSetup.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptINode = createDescriptorForINode();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptParameter_Expression = createDescriptorForParameter_Expression();
  /*package*/ final ConceptDescriptor myConceptPower = createDescriptorForPower();
  /*package*/ final ConceptDescriptor myConceptProduct_Expression = createDescriptorForProduct_Expression();
  /*package*/ final ConceptDescriptor myConceptRate = createDescriptorForRate();
  /*package*/ final ConceptDescriptor myConceptReactant_Expression = createDescriptorForReactant_Expression();
  /*package*/ final ConceptDescriptor myConceptReaction = createDescriptorForReaction();
  /*package*/ final ConceptDescriptor myConceptReaction2 = createDescriptorForReaction2();
  /*package*/ final ConceptDescriptor myConceptReaction_Expression = createDescriptorForReaction_Expression();
  /*package*/ final ConceptDescriptor myConceptReaction_NonReversible = createDescriptorForReaction_NonReversible();
  /*package*/ final ConceptDescriptor myConceptReaction_Reference = createDescriptorForReaction_Reference();
  /*package*/ final ConceptDescriptor myConceptReaction_Reversible = createDescriptorForReaction_Reversible();
  /*package*/ final ConceptDescriptor myConceptReaction_Term = createDescriptorForReaction_Term();
  /*package*/ final ConceptDescriptor myConceptSpecies = createDescriptorForSpecies();
  /*package*/ final ConceptDescriptor myConceptSpecies_Container = createDescriptorForSpecies_Container();
  /*package*/ final ConceptDescriptor myConceptSpecies_Expression = createDescriptorForSpecies_Expression();
  /*package*/ final ConceptDescriptor myConceptSpecies_Reference = createDescriptorForSpecies_Reference();
  /*package*/ final EnumerationDescriptor myEnumerationSpeciesLocation = new EnumerationDescriptor_SpeciesLocation();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.aggregatedLanguage(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, "org.iets3.core.expr.base");
    deps.aggregatedLanguage(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, "Units");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptINode, myConceptParameter, myConceptParameter_Expression, myConceptPower, myConceptProduct_Expression, myConceptRate, myConceptReactant_Expression, myConceptReaction, myConceptReaction2, myConceptReaction_Expression, myConceptReaction_NonReversible, myConceptReaction_Reference, myConceptReaction_Reversible, myConceptReaction_Term, myConceptSpecies, myConceptSpecies_Container, myConceptSpecies_Expression, myConceptSpecies_Reference);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.INode:
        return myConceptINode;
      case LanguageConceptSwitch.Parameter:
        return myConceptParameter;
      case LanguageConceptSwitch.Parameter_Expression:
        return myConceptParameter_Expression;
      case LanguageConceptSwitch.Power:
        return myConceptPower;
      case LanguageConceptSwitch.Product_Expression:
        return myConceptProduct_Expression;
      case LanguageConceptSwitch.Rate:
        return myConceptRate;
      case LanguageConceptSwitch.Reactant_Expression:
        return myConceptReactant_Expression;
      case LanguageConceptSwitch.Reaction:
        return myConceptReaction;
      case LanguageConceptSwitch.Reaction2:
        return myConceptReaction2;
      case LanguageConceptSwitch.Reaction_Expression:
        return myConceptReaction_Expression;
      case LanguageConceptSwitch.Reaction_NonReversible:
        return myConceptReaction_NonReversible;
      case LanguageConceptSwitch.Reaction_Reference:
        return myConceptReaction_Reference;
      case LanguageConceptSwitch.Reaction_Reversible:
        return myConceptReaction_Reversible;
      case LanguageConceptSwitch.Reaction_Term:
        return myConceptReaction_Term;
      case LanguageConceptSwitch.Species:
        return myConceptSpecies;
      case LanguageConceptSwitch.Species_Container:
        return myConceptSpecies_Container;
      case LanguageConceptSwitch.Species_Expression:
        return myConceptSpecies_Expression;
      case LanguageConceptSwitch.Species_Reference:
        return myConceptSpecies_Reference;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationSpeciesLocation);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForINode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "INode", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05f02L);
    b.interface_();
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3989375547139448578");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Parameter", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a35L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3989375547139447349");
    b.version(2);
    b.aggregate("value", 0x375d1bec6ae05a38L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("3989375547139447352").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForParameter_Expression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Parameter_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x53941380e02b1b1fL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/6022460045938858783");
    b.version(2);
    b.associate("Parameter", 0x53941380e02b1b24L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a35L).optional(false).origin("6022460045938858788").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPower() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Power", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x53941380e02cdd12L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/6022460045938973970");
    b.version(2);
    b.aggregate("base", 0x53941380e02cdd15L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("6022460045938973973").done();
    b.aggregate("exponent", 0x53941380e02cdd13L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("6022460045938973971").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProduct_Expression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Product_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b246169bL);
    b.class_(false, false, false);
    b.super_("SpeciesSetup.structure.Reaction_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b2564f61L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/2278330370829457051");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Rate", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a3bL);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3989375547139447355");
    b.version(2);
    b.aggregate("expr", 0x375d1bec6ae09859L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("3989375547139463257").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReactant_Expression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reactant_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b246169cL);
    b.class_(false, false, false);
    b.super_("SpeciesSetup.structure.Reaction_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b2564f61L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/2278330370829457052");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510cL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3989375547139445004");
    b.version(2);
    b.aggregate("left_side", 0x1f9e4166b23d945dL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b246169cL).optional(false).ordered(true).multiple(false).origin("2278330370828899421").done();
    b.aggregate("right_side", 0x1f9e4166b23d945fL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b246169bL).optional(false).ordered(true).multiple(false).origin("2278330370828899423").done();
    b.aggregate("rate", 0x1f9e4166b23d9e63L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a3bL).optional(false).ordered(true).multiple(false).origin("2278330370828901987").done();
    b.aggregate("reactants", 0x1f9e4166b23fbfa5L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efa3L).optional(true).ordered(true).multiple(true).origin("2278330370829041573").done();
    b.aggregate("products", 0x1f9e4166b245326dL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efa3L).optional(true).ordered(true).multiple(true).origin("2278330370829398637").done();
    b.alias("Species");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction2", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x2b6159d0ceea4df1L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3125878369731366385");
    b.version(2);
    b.aggregate("Reactant_Terms", 0x2b6159d0ceea4e02L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x2b6159d0ceea4df0L).optional(true).ordered(true).multiple(true).origin("3125878369731366402").done();
    b.aggregate("Product_Terms", 0x2b6159d0ceea4e05L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x2b6159d0ceea4df0L).optional(true).ordered(true).multiple(true).origin("3125878369731366405").done();
    b.aggregate("Rate", 0x2b6159d0ceea4df5L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a3bL).optional(false).ordered(true).multiple(false).origin("3125878369731366389").done();
    b.alias("Species");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction_Expression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b2564f61L);
    b.class_(false, true, false);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/2278330370830520161");
    b.version(2);
    b.aggregate("expr", 0x1f9e4166b2564f62L).target(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L).optional(false).ordered(true).multiple(false).origin("2278330370830520162").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction_NonReversible() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction_NonReversible", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b23d9462L);
    b.class_(false, false, false);
    b.super_("SpeciesSetup.structure.Reaction", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510cL);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/2278330370828899426");
    b.version(2);
    b.alias("Reaction (Non-reversible)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction_Reference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction_Reference", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efbaL);
    b.class_(false, false, false);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/8038725109107126202");
    b.version(2);
    b.associate("Reaction", 0x6f8f49e54f57efbbL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510cL).optional(false).origin("8038725109107126203").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction_Reversible() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction_Reversible", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x1f9e4166b23d945bL);
    b.class_(false, false, false);
    b.super_("SpeciesSetup.structure.Reaction", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510cL);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/2278330370828899419");
    b.version(2);
    b.alias("Reaction (Reversible)");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReaction_Term() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Reaction_Term", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x2b6159d0ceea4df0L);
    b.class_(false, false, false);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3125878369731366384");
    b.version(2);
    b.property("Stoichiometry", 0x2b6159d0ceea4e0fL).type(PrimitiveTypeId.INTEGER).origin("3125878369731366415").done();
    b.aggregate("Species_Ref", 0x2b6159d0ceea4e11L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efa3L).optional(false).ordered(true).multiple(false).origin("3125878369731366417").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecies() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Species", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510bL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3989375547139445003");
    b.version(2);
    b.property("Location", 0x375d1bec6ae069d3L).type(MetaIdFactory.dataTypeId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae06404L)).origin("3989375547139451347").done();
    b.aggregate("Starting_Concentration", 0x375d1bec6ae084b4L).target(0x3236b0e3fbdf4a71L, 0x8bfb69d9a5a4f1beL, 0xb839ee2c0e6f5b9L).optional(false).ordered(true).multiple(false).origin("3989375547139458228").done();
    b.aggregate("reactantIn", 0x1f9e4166b240432bL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efbaL).optional(true).ordered(true).multiple(true).origin("2278330370829075243").done();
    b.aggregate("productOf", 0x1f9e4166b245327cL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efbaL).optional(true).ordered(true).multiple(true).origin("2278330370829398652").done();
    b.alias("Species");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecies_Container() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Species_Container", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510aL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/3989375547139445002");
    b.version(2);
    b.aggregate("Species", 0x375d1bec6ae05a2eL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510bL).optional(true).ordered(true).multiple(true).origin("3989375547139447342").done();
    b.aggregate("Reactions", 0x375d1bec6ae05a30L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x2b6159d0ceea4df1L).optional(true).ordered(true).multiple(true).origin("3989375547139447344").done();
    b.aggregate("Parameters", 0x375d1bec6ae33181L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae05a35L).optional(true).ordered(true).multiple(true).origin("3989375547139633537").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecies_Expression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Species_Expression", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x53941380e02b1b12L);
    b.class_(false, false, false);
    b.super_("org.iets3.core.expr.base.structure.Expression", 0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/6022460045938858770");
    b.version(2);
    b.property("Location", 0x53941380e02b1b16L).type(MetaIdFactory.dataTypeId(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae06404L)).origin("6022460045938858774").done();
    b.associate("Species", 0x53941380e02b1b1bL).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510bL).optional(false).origin("6022460045938858779").done();
    b.alias("Species");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpecies_Reference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SpeciesSetup", "Species_Reference", 0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x6f8f49e54f57efa3L);
    b.class_(false, false, false);
    b.origin("r:2195aa8a-6524-4bf0-a55a-8f5e288eeb26(SpeciesSetup.structure)/8038725109107126179");
    b.version(2);
    b.associate("Species", 0x6f8f49e54f57efb8L).target(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x375d1bec6ae0510bL).optional(false).origin("8038725109107126200").done();
    return b.create();
  }
}
