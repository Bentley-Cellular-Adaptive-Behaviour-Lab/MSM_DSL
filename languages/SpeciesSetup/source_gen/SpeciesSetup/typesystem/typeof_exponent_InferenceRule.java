package SpeciesSetup.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.iets3.core.expr.base.runtime.runtime.PTF;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_exponent_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_exponent_InferenceRule() {
  }
  public void applyRule(final SNode power, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    // Forces the exponent to be a real number. 
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(power, LINKS.exponent$rVo2);
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:57433058-d722-40a4-a625-e42cb77ddbdd(SpeciesSetup.typesystem)", "6022460045938974152", 0, null);
      typeCheckingContext.createLessThanInequality((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:57433058-d722-40a4-a625-e42cb77ddbdd(SpeciesSetup.typesystem)", "6022460045938974498", true), (SNode) PTF.createRealType(null), false, true, _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.Power$v5;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink exponent$rVo2 = MetaAdapterFactory.getContainmentLink(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x53941380e02cdd12L, 0x53941380e02cdd13L, "exponent");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Power$v5 = MetaAdapterFactory.getConcept(0xf3f95abcaef14f78L, 0xaa77fb36d4ba916aL, 0x53941380e02cdd12L, "SpeciesSetup.structure.Power");
  }
}
