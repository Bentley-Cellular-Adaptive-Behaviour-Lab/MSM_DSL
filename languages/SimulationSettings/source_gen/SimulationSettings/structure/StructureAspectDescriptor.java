package SimulationSettings.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptSettings_Container = createDescriptorForSettings_Container();
  /*package*/ final EnumerationDescriptor myEnumerationAnalysis_Type = new EnumerationDescriptor_Analysis_Type();
  /*package*/ final EnumerationDescriptor myEnumerationGraphics_Type = new EnumerationDescriptor_Graphics_Type();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptSettings_Container);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Settings_Container:
        return myConceptSettings_Container;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAnalysis_Type, myEnumerationGraphics_Type);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForSettings_Container() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SimulationSettings", "Settings_Container", 0xe9f0394c0fe54206L, 0xb9d12af2fb5f41f3L, 0x6be76a078e4c5ad1L);
    b.class_(false, false, true);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:d7416f5b-63c6-40ff-a2a8-046b90a45484(SimulationSettings.structure)/7775299862363134673");
    b.version(2);
    b.property("Analysis_Type", 0x6be76a078e4fb7ffL).type(MetaIdFactory.dataTypeId(0xe9f0394c0fe54206L, 0xb9d12af2fb5f41f3L, 0x6be76a078e4fb7f6L)).origin("7775299862363355135").done();
    b.property("Max_Time_Steps", 0x6be76a078e4fb801L).type(PrimitiveTypeId.INTEGER).origin("7775299862363355137").done();
    b.property("Graphics_Option", 0x6be76a078e4fb804L).type(MetaIdFactory.dataTypeId(0xe9f0394c0fe54206L, 0xb9d12af2fb5f41f3L, 0x6be76a078e508056L)).origin("7775299862363355140").done();
    b.associate("Desired_World_Setup", 0x6be76a078e4fb7e5L).target(0x276cd304748c4d5dL, 0xaad04b34e2a42cedL, 0x73ca99e5119b19e3L).optional(false).origin("7775299862363355109").done();
    return b.create();
  }
}
